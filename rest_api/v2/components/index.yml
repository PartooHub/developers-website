securitySchemes:
  ApiKeyAuth:
    description: >
      The authentication system on Partoo API is using API Key that should be put in the header of the request (the name
      of the header is `x-APIKey`).
      An api_key is linked to a user. This user's role will give you different access level to the API features.
    type: apiKey
    in: header
    name: x-APIKey
schemas:
  Query:
    type: string
    description: Search business by name or address
    example: "Partoo"
  group_business_ids:
    description: List of business ids added to the group after applying all the filter
    type: array
    example: ['595badaef348ab6b3530033f', '59d53302b12ff6429f262639']
    items:
      $ref: '#/schemas/BusinessId'
  business_ids:
    description: List of business ids
    type: array
    example: ['5409c35a97bbc544d8e26737', '595badaef348ab6b3530033f', '59d53302b12ff6429f262639']
    items:
      $ref: '#/schemas/BusinessId'
  GroupStatistics:
    type: array
    items:
      type: object
      properties:
        businesses:
          $ref: '#/schemas/BusinessesCount'
        id:
          $ref: '#/schemas/GroupId'
  BusinessesCount:
    type: integer
    example: 10
    description: Number of businesses in group
  BaseAnalyticsResponse:
    type: array
    items:
      type: object
      properties:
        queries_direct:
          $ref: '#/schemas/QueriesDirect'
        queries_branded:
          $ref: '#/schemas/QueriesBranded'
        queries_discovery:
          $ref: '#/schemas/QueriesDiscovery'
        queries_indirect:
          $ref: '#/schemas/QueriesIndirect'
        views_maps:
          $ref: '#/schemas/ViewsMaps'
        views_search:
          $ref: '#/schemas/ViewsSearch'
        actions_website:
          $ref: '#/schemas/ActionsWebsite'
        actions_phone:
          $ref: '#/schemas/ActionsPhone'
        actions_driving_directions:
          $ref: '#/schemas/ActionsDrivingDirections'
        date:
          $ref: '#/schemas/AnalyticsDate'
        bucket:
          $ref: '#/schemas/AnalyticsBucket'
  QueriesDirect:
    type: integer
    example: 100
    description: Customers who find your listing searching for your business name or address
  QueriesBranded:
    type: integer
    example: 111
    description: Customers who find your listing searching for a brand related to your business
  QueriesDiscovery:
    type: integer
    example: 222
    description: Customers who find your listing searching for a category, product or service
  QueriesIndirect:
    type: integer
    example: 333
    description: Sum of the queries branded and discovery
  ViewsMaps:
    type: integer
    example: 55
    description: Customers who view your listing on Google Maps
  ViewsSearch:
    type: integer
    example: 8
    description: Customers who view your listing on Google Search
  ActionsWebsite:
    type: integer
    description: Customers who click on your website link
  ActionsPhone:
    type: integer
    description: Customers who call your business
  ActionsDrivingDirections:
    type: integer
    description: Customers who request directions to your business
  ApiKeys:
    ApiKey:
      type: object
      properties:
        id:
          type: integer
          example: 3245
          description: Key ID
        created_at:
          type: string
          pattern: date
          example: "2018-03-12 11:49:03.399475+00"
          description: Date of creation
        modified_at:
          type: string
          pattern: date
          example: "2020-10-20 11:46:38.914467+00"
          description: Date of last modification
        created_by:
          type: string
          example: "5309c3a237bbc544d8e26737"
          description: ID of the user who created the key
        user_id:
          type: string
          example: "5309c3a237bbc544d8e26737"
          description: ID of the user who owns the key
        disabled:
          type: boolean
          example: False
          description: The API key is disabled when someone revokes it
        disabled_by:
          type: string
          example: "5309c3a237bbc544d8e26737"
          description: ID of the user who revoked the key
        label:
          type: string
          example: "API key name"
          description: "Name given to recognize the Api key"
        revoked_at:
          type: string
          pattern: date
          example: "2020-10-20 11:46:38.914467+00"
          description: Date of revokation
        expiration_date:
          type: string
          pattern: date
          example: "2022-06-05"
          description: Date after which the key is no longer usable
        last_used_at:
          type: string
          pattern: date
          example: "2019-08-22 11:46:38.914467+00"
          description: Date of last usage of the key
        auto_expires_after_use:
          type: boolean
          example: False
          description: Is true for keys that can be only used once
    StatusDisabled:
      type: boolean
      example: True
      description: Keys disabled
    StatusExpired:
      type: boolean
      example: True
      description: Keys expired
  AnalyticsDate:
    type: datetime
    description: First day of the aggregation
    example: '2019-11-05'
  AnalyticsBucket:
    type: string
    description: Time aggregation requested
    example: 'day'
  ListResult:
    type: object
    properties:
      page:
        $ref: '#/schemas/current_page'
      max_page:
        $ref: '#/schemas/max_page'
      count:
        $ref: '#/schemas/count'
  CategoryLang:
    type: string
    description: Category language
    enum: ['fr', 'es', 'it', 'en', 'de']
  CategoryName:
    type: string
    description: Category name in given language
    example: Cabinet d'expertise comptable
  CategoryId:
    type: string
    description: Category id
    example: '5109c3a237zdc544d8e267378 or gcid:climbing_gym'
  Category:
    type: object
    properties:
      name:
        $ref: '#/schemas/CategoryName'
      id:
        $ref: '#/schemas/CategoryId'
  CategorySqlId:
    type: integer
    description: Category id
    example: 42
  CategorySqlGmbId:
    type: string
    description: Google My Business Category Id ( unique )
    example: 'gcid:climbing_gym'
  CategorySqlName:
    type: object
    properties:
      name:
        type: string
        description: Translated category name
        example: salle d'escalade
      country:
        type: string
        description: Country code
        example: 'FR'
  CategorySqlNames:
    type: array
    description: Category name translated for available countries
    items:
      $ref: '#/schemas/CategorySqlName'
  CategorySqlLegacyIds:
    type: array
    description: Old related partoo categories id
    example: ['5109c3a237zdc544d8e267378', 'bf5179d3a237zdc576d8e2673']
  CategorySqlState:
    type: string
    description: State of category ( OK or DEPRECATED )
    example: 'OK'
  CategorySqlBlockPushLong:
    type: boolean
    description:  Boolean indicating if the business long description can be pushed to GMB when the business belongs to this category
    example: false
  CategorySqlLiveId:
    type: string
    description: Live category id to which the category is mapped (deprecated categories are mapped to the closest category)
    example: 'gcid:sport_club'
  CategorySql:
    type: object
    properties:
      id:
        $ref: '#/schemas/CategorySqlId'
      gmb_id:
        $ref: '#/schemas/CategorySqlGmbId'
      names:
        $ref: '#/schemas/CategorySqlNames'
      state:
        $ref: '#/schemas/CategorySqlState'
      block_push_long_description_on_gmb:
        $ref: '#/schemas/CategorySqlBlockPushLong'
      legacy_ids:
        $ref: '#/schemas/CategorySqlLegacyIds'
  CategorySqlByLang:
    type: object
    properties:
      id:
        $ref: '#/schemas/CategorySqlGmbId'
      name:
        type: string
        description: Category name in the requested language
        example: salle d'escalade
      state:
        $ref: '#/schemas/CategorySqlState'
      block_push_long_description_on_gmb:
        $ref: '#/schemas/CategorySqlBlockPushLong'
      legacy_ids:
        $ref: '#/schemas/CategorySqlLegacyIds'
      live_id:
        $ref: '#/schemas/CategorySqlLiveId'
  ProductSubscribeResponseObject:
    type: object
    properties:
      subscription_date:
        type: integer
        description: Date on which the subscription was activated
        example: 1540628702
      status:
        type: string
        enum:
          - active
  ProductUnsubscribeResponseObject:
    type: object
    properties:
      canceling_date:
        type: integer
        description: Date on which the subscription was canceled
        example: 1540628702
      status:
        type: string
        enum:
          - inactive
  Password:
    description: >
      The User password.
      It should comply with the following rules:

      - should be at least 8 characters long

      - should have one upper case letter and one lower case letter

      - should have one special character
    type: string
    format: password
    minLength: 8
  current_page:
    type: integer
    description: Current page number
    example: 1
  max_page:
    type: integer
    description: Last page number
    example: 10
  count:
    type: integer
    description: Number of resources complying with filters
    example: 287
  TimeWindow:
    description: Time window
    type: string
    pattern: '^([0-1][0-9]|2[0-3]):([0-5][0-9])\-([0-1][0-9]|2[0-3]):([0-5][0-9])$'
    example: 10:00-14:00
  Day:
    required: true
    description: Opened in the morning and in the evening `[10:00-14:00, 18:00-00:00]`. Closed the whole day `[]`
    type: array
    items:
      $ref: '#/schemas/TimeWindow'
    example: ['10:00-14:00']
  Role:
    description: User role in the application
    type: string
    enum:
      - PROVIDER
      - ORG_ADMIN
      - GROUP_MANAGER
      - BUSINESS_MANAGER
      - PUBLISHER
    example: BUSINESS_MANAGER
  Lang:
    description: Available language in the application
    type: string
    enum:
      - fr
      - en
      - es
      - it
      - pt-br
    example: fr
  UserStatus:
    description: User status in the application
    type: string
    enum:
      - active
      - invited
    example: active
  Product:
    description: Available products
    type: string
    enum:
      - presence_management
      - review_booster
      - review_management
    example: presence_management
  Subscriptions:
    description: Business subscriptions
    type: object
    required:
      - presence_management
      - review_booster
      - review_management
    properties:
      presence_management:
        type: boolean
        description: Is business subscribed to Presence Management
      review_management:
        type: boolean
        description: Is business subscribed to Review Management
      review_booster:
        type: boolean
        description: Is business subscribed to Review Booster
    example:
      presence_management: true
      review_management: true
      review_booster: false
  ReviewId:
    type: integer
    description: Review id
    example: 34
  CommentId:
    type: integer
    description: Comment id
    example: 666
  ReviewPublisherLabel:
    type: string
    description: Publisher label
    enum:
      - google_my_business
      - facebook
      - foursquare
  ReviewPublisherId:
    type: string
    description: Review id on publisher
    example: accounts/114063712393225091258/locations/74805271119400652054
  ReviewAuthorName:
    type: string
    description: Author name
    example: Castorche
  ReviewCreationDate:
    type: string
    description: Review creation date
    format: datetime
    example: 2017-08-01T19:15:54.256000+02:00
  ReviewUpdateDate:
    type: string
    description: Review update date
    format: datetime
    example: 2017-08-01T19:15:54.256000+02:00
  CreatedDate:
    type: string
    description: Date of creation
    format: datetime
    example: 2019-08-01T19:15:54.256000+02:00
  UpdatedDate:
    type: string
    description: Date of creation
    format: datetime
    example: 2019-09-01T15:12:35.256000+02:00
  ReviewDeleteDate:
    type: string
    description: Review deletion date
    format: datetime
  ReviewRating:
    type: integer
    description: Review rating (can be null)
    maximum: 5
    minimum: 0
    example: 3
  ReviewRecommended:
    type: boolean
    description: Review recommended (can be null)
  ParentId:
    type: integer
    description: id of the parent comment
  ReviewTitle:
    type: string
    description: Review title
  ReviewBody:
    type: string
    description: Review body content
    example: Magasin un peu vieillot , mais personnel très sympathique, nombreuses références en rayons , un très bon choix côté vin...
  CommentBody:
    type: string
    description: Reply content
    example: Merci ❤️
  ReviewState:
    type: string
    description: Reply state
    enum:
      - treated
      - not_treated
      - deleted
  ReviewLink:
    type: string
    format: uri
    description: Link to review on publisher platform
  Comment:
    description: Reply to a review
    type: object
    properties:
      id:
        $ref: '#/schemas/CommentId'
      partner_id:
        $ref: '#/schemas/ReviewPublisherId'
      created:
        $ref: '#/schemas/CreatedDate'
      author_name:
        $ref: '#/schemas/ReviewAuthorName'
      content:
        $ref: '#/schemas/CommentBody'
      date:
        $ref: '#/schemas/ReviewUpdateDate'
      can_edit:
        type: boolean
        example: true
      review_id:
        $ref: '#/schemas/ReviewId'
      parent_id:
        $ref: '#/schemas/ParentId'
  Review:
    description: Business Review on partner
    type: object
    properties:
      key:
        type: string
      org_id:
        $ref: '#/schemas/OrgId'
      id:
        $ref: '#/schemas/ReviewId'
      business_id:
        $ref: '#/schemas/BusinessId'
      partner:
        $ref: '#/schemas/ReviewPublisherLabel'
      partner_id:
        $ref: '#/schemas/ReviewPublisherId'
      author_name:
        $ref: '#/schemas/ReviewAuthorName'
      date:
        $ref: '#/schemas/ReviewUpdateDate'
      update_date:
        $ref: '#/schemas/ReviewUpdateDate'
      delete_date:
        $ref: '#/schemas/ReviewDeleteDate'
      rating:
        $ref: '#/schemas/ReviewRating'
      recommended:
        $ref: '#/schemas/ReviewRecommended'
      title:
        $ref: '#/schemas/ReviewTitle'
      content:
        $ref: '#/schemas/ReviewBody'
      state:
        $ref: '#/schemas/ReviewState'
      link:
        $ref: '#/schemas/ReviewLink'
      comments:
        $ref:  '#/schemas/Comment'
  OrgId:
    description: Organisation id
    type: integer
    example: 42
  OrgName:
    description: Organisation name
    type: string
    example: Fast Retailer
  OrgAlias:
    description: Organisation alias (should match regex `[a-z0-9_]`)
    type: string
    example: fast_retailer
  OrgProvider:
    description: Organisation provider
    type: string
    example: partoo
  Org:
    description: Organisation
    type: object
    properties:
      org_id:
        $ref:  '#/schemas/OrgId'
      name:
        $ref:  '#/schemas/OrgName'
      alias:
        $ref:  '#/schemas/OrgAlias'
      provider:
        $ref:  '#/schemas/OrgProvider'
  BusinessId:
    description: Business id
    type: string
    example: 5409c35a97bbc544d8e26737
  BusinessName:
    description: The name of the business (POI) as it will appear on the publishing platforms
    type: string
    minLength: 1
    example: Corner shop
  BusinessCleanName:
    deprecated: True
    description: <code>It will be removed in November 2020</code> <br />The clean name of the business (typically the brand name) used for Apple, Foursquare and Justacote (french only) partners. This should not contain the city name nor any additional descriptive items
    type: string
    minLength: 1
    examples: Partoo
  BusinessCity:
    description: The city where the business is located
    type: string
    example: Paris
  BusinessCountry:
    description: Business country - use ISO 3166 alpha2 code
    type: string
    example: FR
  BusinessRegion:
    description: The region where the business is located
    type: string
    example: Ile-de-France
  BusinessCode:
    description: The unique store code of the business. If not provided, it will be automatically generated
    type: string
    example: CS-75019
  BusinessZipcode:
    description: Zipcode (or postal code) for the business address
    type: string
    example: "75019"
  BusinessNationalIdentificationNumber:
    description: |
      <p>The National Identification Number of the business
      <p> It's a unique number under which the business is registered in a specific country. For example, in France, it's SIRET code or for Ireland it's the CRO
    type: string
  BusinessCategories:
    description: A list of category ids mapped to the business. At least one category needs to be provided. For more information see Categories section
    type: array
  BusinessLatitude:
    description: Latitude. Decimals are separated by a dot and not by a comma.
    type: number
    format: double
    example: -3.585993
  BusinessLongitude:
    description: Longitude. Decimals are separated by a dot and not by a comma.
    type: number
    format: double
    example: 47.870341
  Latitude:
    description: Latitude pushed on publishers. Decimals are separated by a dot and not by a comma.
    type: number
    format: double
    example: -3.585993
  Longitude:
    description: Longitude pushed on publishers. Decimals are separated by a dot and not by a comma.
    type: number
    format: double
    example: 47.870341
  BusinessStatus:
    description: |
      <p>Defines the current status of the business. `Open` indicates the business is up and running. `Closed` means that the business has definitely closed it's activity. For temporarily closed businesses please use the <code>specific_hours</code></p>
    type: string
    enum: [open, closed]
    default: open
    example: open
  BusinessWebsite:
    description: The business's own website url or the main url of the company.
    type: string
    format: uri
    example: https://www.corner-shop.co/
  BusinessFacebookPage:
    description: Business Facebook page
    type: string
    format: uri
    example: https://www.facebook.com/the-corner-shop
  BusinessTwitter:
    description: Business twitter page
    type: string
    format: uri
    example: https://www.twitter.com/the-corner-shop
  BusinessVideos:
    description: Business videos URLs
    deprecated: true
    type: array
    items:
      type: string
      format: uri
  BusinessNews:
    deprecated: true
    type: array
    items:
      $ref: '#/schemas/News'
  BusinessPromos:
    deprecated: true
    type: array
    items:
      $ref: '#/schemas/Promo'
  BusinessLongDescription:
    description: |
      <p>A more detailed description of the business. It needs to be in the language of the country where the business is located. For example, if the business is located in London, then the description needs to be in English.
      <p>⚠️It is limited to 750 characters
    type: string
    example: lorem ipsum dolor sit amet
  BusinessShortDescription:
    description: |
      <p>A short description of the business. It needs to be in the language of the country where the business is located. For example, if the business is located in Madrird, then the description needs to be in Spanish.
      <p>⚠️It is limited to 200 characters
    type: string
    example: lorem ipsum
  BusinessOrgId:
    description: The organisation's unique identifier at Partoo. During onboarding, Partoo creates an organisation where all your businesses will be aggregated
    type: integer
    example: 42
  BusinessContacts:
    description: Specify how the clients can reach the persons in charge of the business in case they have questions.
    type: array
    items:
      $ref: '#/schemas/Contact'
  GroupId:
    description: The id of the group the business belongs to. An organisation can have multiple groups that contain one or more businesses. A business can belong to only one group.
    type: integer
    example: 23
  GroupName:
    description: Group name
    type: string
    example: ComfyZone Paris
  GroupParentId:
    description: Group parent Id. If not null, it means it's a subgroup.
    type: integer / null
    example: null
  GroupProvider:
    description: Group provider label
    type: string
    example: partoo
  Group:
    description: Partoo App Group
    type: object
    properties:
      id:
        $ref: '#/schemas/GroupId'
      org_id:
        $ref: '#/schemas/OrgId'
      parent_id:
        $ref: '#/schemas/GroupParentId'
      created:
        $ref: '#/schemas/CreatedDate'
      updated:
        $ref: '#/schemas/UpdatedDate'
      name:
        $ref: '#/schemas/GroupName'
      provider:
        $ref: '#/schemas/GroupProvider'
      subgroups:
        description: Subgroups of the group. A subgroup can not have subgroups
        type: array
  Group_with_subgroup:
    description: Partoo App Group with subgroup
    type: object
    properties:
      id:
        $ref: '#/schemas/GroupId'
      org_id:
        $ref: '#/schemas/OrgId'
      parent_id:
        $ref: '#/schemas/GroupParentId'
      created:
        $ref: '#/schemas/CreatedDate'
      updated:
        $ref: '#/schemas/UpdatedDate'
      name:
        $ref: '#/schemas/GroupName'
      provider:
        $ref: '#/schemas/GroupProvider'
      subgroup:
        description: Subgroups of the group. A subgroup can not have subgroups
        type: array
        items:
          $ref: '#/schemas/Subgroup'
  Subgroup:
    description: Partoo App Group with subgroup
    type: object
    properties:
      id:
        description: Group id
        type: integer
        example: 46
      org_id:
        $ref: '#/schemas/OrgId'
      parent_id:
        description: Group parent Id. If not null, it means it's a subgroup.
        type: integer / null
        example: 23
      created:
        $ref: '#/schemas/CreatedDate'
      updated:
        $ref: '#/schemas/UpdatedDate'
      name:
        description: Group name
        type: string
        example: SubComfyZone Paris
      provider:
        $ref: '#/schemas/GroupProvider'
  Business:
    description: Partoo App Business
    type: object
    properties:
      id:
        $ref: '#/schemas/BusinessId'
      created:
        description: Timestamp (in seconds) of the business creation
        type: number
        format: float
        example: 1409925979.5
      modified:
        description: Timestamp (in seconds) of the business last modification
        type: number
        format: float
        example: 1561335111.681374
      code:
        $ref: '#/schemas/BusinessCode'
      status:
        $ref: '#/schemas/BusinessStatus'
      org_id:
        $ref: '#/schemas/BusinessOrgId'
      group_id:
        $ref: '#/schemas/GroupId'
      name:
        $ref: '#/schemas/BusinessName'
      address_details:
        $ref: '#/schemas/AddressDetails'
      address:
        description: Business address
        type: string
      address2:
        $ref: '#/schemas/Address2'
      city:
        $ref: '#/schemas/BusinessCity'
      zipcode:
        $ref: '#/schemas/BusinessZipcode'
      region:
        $ref: '#/schemas/BusinessRegion'
      country:
        $ref: '#/schemas/BusinessCountry'
      open_hours:
        $ref: '#/schemas/OpenHours'
      specific_hours:
        $ref: '#/schemas/SpecificHours'
      description_short:
        $ref: '#/schemas/BusinessShortDescription'
      description_long:
        $ref: '#/schemas/BusinessLongDescription'
      website_url:
        $ref: '#/schemas/BusinessWebsite'
      facebook_url:
        $ref: '#/schemas/BusinessFacebookPage'
      twitter_url:
        $ref: '#/schemas/BusinessTwitter'
      google_location_id:
        description: Id of GMB Location to which the business is linked
        type: string
      facebook_page_id:
        description: Id of Facebook Location to which the business is linked
        type: string
      national_identification_number:
        $ref: '#/schemas/BusinessNationalIdentificationNumber'
      logo_url:
        description: Business LOGO URL
        type: string
        format: uri
      contacts:
        $ref: '#/schemas/BusinessContacts'
      photos:
        $ref: '#/schemas/Photos'
      lat:
        $ref: '#/schemas/Latitude'
      long:
        $ref: '#/schemas/Longitude'
      subscriptions:
        $ref: '#/schemas/Subscriptions'
      videos:
        $ref: '#/schemas/BusinessVideos'
      siret:
        deprecated: true
        description: Business SIRET (for french businesses)
        type: string
      news:
        $ref: '#/schemas/BusinessNews'
      promos:
        $ref: '#/schemas/BusinessPromos'
  BusinessWithCustomFields:
    description: Partoo App Business
    type: object
    properties:
      id:
        $ref: '#/schemas/BusinessId'
      created:
        description: Timestamp (in seconds) of the business creation
        type: number
        format: float
        example: 1409925979.5
      modified:
        description: Timestamp (in seconds) of the business last modification
        type: number
        format: float
        example: 1561335111.681374
      code:
        $ref: '#/schemas/BusinessCode'
      status:
        $ref: '#/schemas/BusinessStatus'
      org_id:
        $ref: '#/schemas/BusinessOrgId'
      group_id:
        $ref: '#/schemas/GroupId'
      name:
        $ref: '#/schemas/BusinessName'
      clean_name:
        $ref: '#/schemas/BusinessCleanName'
      address_details:
        $ref: '#/schemas/AddressDetails'
      address:
        description: Business address
        type: string
      address2:
        $ref: '#/schemas/Address2'
      city:
        $ref: '#/schemas/BusinessCity'
      zipcode:
        $ref: '#/schemas/BusinessZipcode'
      region:
        $ref: '#/schemas/BusinessRegion'
      country:
        $ref: '#/schemas/BusinessCountry'
      time_slot_reference:
        $ref: '#/schemas/TimeSlotReference'
      open_hours:
        $ref: '#/schemas/OpenHours'
      specific_hours:
        $ref: '#/schemas/SpecificHours'
      description_short:
        $ref: '#/schemas/BusinessShortDescription'
      description_long:
        $ref: '#/schemas/BusinessLongDescription'
      website_url:
        $ref: '#/schemas/BusinessWebsite'
      facebook_url:
        $ref: '#/schemas/BusinessFacebookPage'
      twitter_url:
        $ref: '#/schemas/BusinessTwitter'
      google_location_id:
        description: Id of GMB Location to which the business is linked
        type: string
      facebook_page_id:
        description: Id of Facebook Location to which the business is linked
        type: string
      national_identification_number:
        $ref: '#/schemas/BusinessNationalIdentificationNumber'
      logo_url:
        description: Business LOGO URL
        type: string
        format: uri
      contacts:
        $ref: '#/schemas/BusinessContacts'
      photos:
        $ref: '#/schemas/Photos'
      lat:
        $ref: '#/schemas/Latitude'
      long:
        $ref: '#/schemas/Longitude'
      subscriptions:
        $ref: '#/schemas/Subscriptions'
      custom_fields:
        $ref: '#/schemas/CustomFields.Array'
      videos:
        $ref: '#/schemas/BusinessVideos'
      siret:
        deprecated: true
        description: Business SIRET (for french businesses)
        type: string
      news:
        $ref: '#/schemas/BusinessNews'
      promos:
        $ref: '#/schemas/BusinessPromos'
  UserPhone:
    description: User phone number
    type: string
  UserFirstName:
    description: User first name
    type: string
    example: Perceval
  UserLastName:
    description: User last name
    type: string
    example: de Galles
  UserEmail:
    description: User email
    type: string
    format: email
    example: perceval@kaamelott.com
  UserProvider:
    description: User provider label
    type: string
    example: partoo
  UserId:
    description: User id
    type: string
    example: 5309c3a237bbc544d8e26737
  UserOrgId:
    description: User organisation id
    type: integer
    example: 42
  User:
    description: Partoo App User
    type: object
    properties:
      id:
        $ref: '#/schemas/UserId'
      org_id:
        $ref: '#/schemas/UserOrgId'
      first_name:
        $ref: '#/schemas/UserFirstName'
      last_name:
        $ref: '#/schemas/UserLastName'
      email:
        $ref: '#/schemas/UserEmail'
      lang:
        $ref: '#/schemas/Lang'
      phone:
        $ref: '#/schemas/UserPhone'
      sidebar_products:
        description: The products the user has access to
        type: array
        items:
          $ref: '#/schemas/Product'
      business_ids:
        description: (useful only if you user has `BUSINESS_MANAGER` role) List of businesses ids the user can access
        type: array
        items:
          $ref: '#/schemas/BusinessId'
      reports:
        description: List of reports that the user has access to (not all User endpoints return this field)
        type: array
        items:
          $ref: '#/schemas/Report'
      group_id:
        description: Group id of the user (it affects only the group manager)
        type: integer
        example: 42
      role:
        $ref: '#/schemas/Role'
      provider:
        $ref: '#/schemas/UserProvider'
      status:
        $ref: '#/schemas/UserStatus'
      keywords:
        $ref: '#/schemas/Keywords'
      has_active_api_keys:
        type: boolean
        example: true
        description: Returns true if the user has at least one API Key that is not disabled and not expired
  TimeSlotReference:
    description: Default time period, can be used to set open hours of a day
    type: array
    items:
      $ref: '#/schemas/TimeWindow'
  OpenHours:
    description: |
      <p>The opening hours of the business.
      <p>❗ This field is not mandatory, but if not provided then the business will not be pushed on some platforms (example: Google My Business). If provided, then a schedule needs to be sent for each day in particular
    type: object
    required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
    properties:
      monday:
        $ref: '#/schemas/Day'
      tuesday:
        $ref: '#/schemas/Day'
      wednesday:
        $ref: '#/schemas/Day'
      thursday:
        $ref: '#/schemas/Day'
      friday:
        $ref: '#/schemas/Day'
      saturday:
        $ref: '#/schemas/Day'
      sunday:
        $ref: '#/schemas/Day'
  SpecificHours:
    description: |
      <p>Exceptional openning or closing times for the business
      <p>All exceptional days of the year, including temporerly closed, can be specified beforehand or on the go. For example:
      <ul>
       <li>Beforehand: bank holidays (like Christmas or Pentecôte)</li>
      <li>Unpredicted: COVID-19 exceptional situation
    type: object
    required:
      - open
      - close
    properties:
      open:
        type: array
        items:
          type: object
          properties:
            starts_at:
              type: string
              pattern: date
              example: "2020-01-20"
            ends_at:
              type: string
              pattern: date
              example: "2020-01-20"
            open_hours:
              type: array
              items:
                $ref: '#/schemas/TimeWindow'
      close:
        type: array
        items:
          type: object
          properties:
            starts_at:
              type: string
              pattern: date
              example: "2020-01-20"
            ends_at:
              type: string
              pattern: date
              example: "2020-01-22"
  Contact:
    description: Business contact
    type: object
    properties:
      name:
        description: Contact full name
        type: string
        example: Hubert Bonisseur de la Bath
      email:
        description: Contact email
        type: string
        format: email
        example: hubert@oss117.fr
      phone_numbers:
        description: Contact phone numbers
        type: array
        items:
          type: string
        example: ['0302060628']
  AddressDetails:
    description: Business main address. Represents the full address of the business. ⚠️ At least the `street_name` parameter needs to be provided
    type: object
    required:
      - street_name
    properties:
      number:
        description: Street number
        type: string
        example: "12"
      number_supplement:
        description: Street number supplement
        type: string
        example: bis
      street_type:
        description: Type of street
        type: string
        example: rue
      street_name:
        description: Name of the street
        type: string
        example: du coquelicot
  Address2:
    description: Complement of address. Any additional information that could help better find the business location
    type: string
  Keywords:
    description: Array of keywords
    type: array
    maxItems: 12
    items:
      type: string
  Photos:
    description: |
      <p>Business photos
      <p>Each business can have one or more photos associated
    type: object
    properties:
      LOGO:
        description: The logo image of the brand. In case of Google, for businesses that have their basic information (phone number, hours, etc.), the Business Profile will highlight the logo.
        type: string
        format: uri
      primary:
        description: The business's main photo URL. In case of Google, it represents the cover photo to the top of the profile
        type: string
        format: uri
      secondary:
        description: Additional photos that can highlight the features of the business
        type: array
        items:
          type: string
          format: uri
  IntegrationStatus:
    description: Business integration status on publisher
    type: string
    enum:
      - SUCCESS
      - PENDING
      - NOT_AUTHORIZED
      - NOT_AUTHENTICATED
      - FIELD_ERROR
      - FIELD_REJECTED
      - ERROR
      - DUPLICATED_BUSINESSES
      - ORG_DISABLED
  IntegrationData:
    description: Business integration data for given partner
    type: object
    properties:
      status:
        $ref: '#/schemas/IntegrationStatus'
      url:
        description: Business URL on publisher platform
        type: string
        format: uri
      timestamp:
        description: Status date
        type: string
        format: datetime
      error_details:
        description: Errors messages list if status is not `SUCCESS` or `PENDING`
        type: array
        items:
          type: string
  InvitationId:
    description: invitation id
    type: string
    example: d3d8c966-0356-4ec0-baae-13ec3622ebc2
  TargetPhone:
    type: string
    description: the exact phone number we would have sent the invitation(s) to
    example: '0701020304'

  AddressStreetType:
    description: Street type object
    type: object
    properties:
      value:
        description: Street type value
        type: string
        example: street
      label:
        description: Street type label
        type: string
        example: Street

  AddressNumberSupplement:
    description: Number supplement object
    type: object
    properties:
      value:
        description: Number supplement value
        type: string
        example: bis
      label:
        description: Number supplement label
        type: string
        example: Bis

  CustomFields.Array:
    description: |
      <p>Custom Fields set for this Business
      <p>They represent configurable fields that can be defined in addition to the normal business fields proposed by Partoo.
      They are unique to the organisation and can be entitrly adapted to the company's needs.
    type: array
    items:
      $ref: '#/schemas/CustomFields.Field.Base'
    example: [
      {
        id: 1,
        type: "BOOLEAN",
        name: "Parking",
        value: true,
        order: 1,
      },
      {
        id: 2,
        type: "TEXT",
        name: "ManagerName",
        value: toto,
        order: 2,
      },
      {
        id: 3,
        type: "TEXT",
        name: "Supervisor",
        value: null,
        order: 2,
      },
      {
        id: 4,
        type: "INTEGER",
        name: "Surface",
        value: 2,
        order: 3,
      },
      {
        id: 5,
        type: "FLOAT",
        name: "DistanceFromSubway",
        value: 2.55,
        order: 4,
      },
      {
        id: 6,
        type: "SINGLE_SELECT",
        name: "Level",
        value: "two",
        order: 4,
      },
      {
        id: 7,
        type: "MULTIPLE_SELECT",
        name: "Services",
        value: ["one", "two"],
        order: 5,
      },
      {
        id: 8,
        type: "MULTIPLE_SELECT_IMAGE",
        name: "BannerImage",
        value: ["image 1", "image 2"],
        order: 6,
      }
    ]

  CustomFields.Field.Base:
    description: A Custom Field
    properties:
      name:
        description: Name of the custom field
        type: string
      type:
        description: Possible values are "BOOLEAN", "INTEGER", "TEXT", "FLOAT", "SINGLE_SELECT", "MULIPLE_SELECT", "MULIPLE_SELECT_IMAGE".
        type: string
      id:
        description: Id of the custom field
        type: integer
      order:
        description: >
          Describes where the custom field is displayed on the Business Edit view of the Partoo App
          inside the ”Custom Field” section (/app/business/edit#<business id>)
          <p> The lower the value, the higher the field will be placed.
        type: integer
    discriminator:
      propertyName: type
      mapping:
        TEXT: '#/components/schemas/CustomFields.Field.Text'
        INTEGER: '#/components/schemas/CustomFields.Field.Integer'
        FLOAT: '#/components/schemas/CustomFields.Field.Number'
        BOOLEAN: '#/components/schemas/CustomFields.Field.Boolean'
        SINGLE_SELECT: '#/components/schemas/CustomFields.Field.Text'
        MULTIPLE_SELECT: '#/components/schemas/CustomFields.Field.MultiSelect'
        MULTIPLE_SELECT_IMAGE: '#/components/schemas/CustomFields.Field.MultiSelectImage'

  CustomFields.Field.Integer:
    allOf:
      - $ref: '#/schemas/CustomFields.Field.Base'
      - properties:
          value:
            description: >
              Value for this Custom Field. Can be NULL if not set.
            type: integer | null

  CustomFields.Field.Number:
    allOf:
      - $ref: '#/schemas/CustomFields.Field.Base'
      - properties:
          value:
            description: >
              Value for this Custom Field. Can be NULL if not set.
            type: number | null

  CustomFields.Field.Text:
    allOf:
      - $ref: '#/schemas/CustomFields.Field.Base'
      - properties:
          value:
            description: >
              Value for this Custom Field. Can be NULL if not set.
            type: string | null

  CustomFields.Field.Boolean:
    allOf:
      - $ref: '#/schemas/CustomFields.Field.Base'
      - properties:
          value:
            description: >
              Value for this Custom Field. Can be NULL if not set.
            type: boolean | null

  CustomFields.Field.MultiSelect:
    allOf:
      - $ref: '#/schemas/CustomFields.Field.Base'
      - properties:
          value:
            description: >
              Value for this Custom Field. Can be NULL if not set.
            type: array
            items:
              type: string

  CustomFields.Field.MultiSelectImage:
    allOf:
      - $ref: '#/schemas/CustomFields.Field.Base'
      - properties:
          value:
            description: >
              Value for this Custom Field. Can be NULL if not set.
            type: array
            items:
              type: string


  CustomFields.Update:
    description: |
      <p>Custom Fields set for this Business
      <p>They represent configurable fields that can be defined in addition to the normal business fields proposed by Partoo.
      They are unique to the organisation and can be entitrly adapted to the company's needs.
    type: object
    properties:
      custom_fields_name:
        description: >
          Replace \<custom_fields_name\> with the name of the custom field to update.
          The value must comply with the custom field type.
          <p> Set to NULL to empty the field.
        type: integer | number | string | boolean | array | null
    example: {
        Parking: true,
        ManagerName: 'toto',
        Surface: 35,
        DistanceFromSubway: 1.5,
        Level: 'one',
        Services: ['DisabledAccess', 'FreeParking'],
        BannerImage": ["image 1", "image 2"],


      }

  BusinessFields.SectionArray:
    description: Business Fields sections array
    type: array
    items:
      $ref: '#/schemas/BusinessFields.Section'
    example: [
    {
      name: 'address',
      fields: [
      {
        name: "country",
        enabled: true,
        enabled_for_subroles: true
      },
      {
        name: "city",
        enabled: true,
        enabled_for_subroles: false
      },
      ]
    },
    {
      name: 'description',
      fields: [
      {
        name: "categories",
        enabled: true,
        enabled_for_subroles: true
      },
      {
        name: "website_url",
        enabled: true,
        enabled_for_subroles: true
      }
      ]
    },
    {
      name: "hours",
      fields: [
      {
        name: "open_hours",
        enabled: true,
        enabled_for_subroles: true
      },
      ]
    },
    {
      name: "photos",
      fields: [
      {
        name: "cover",
        enabled: false,
        enabled_for_subroles: false
      },
      ]
    },
    {
      name: "contact",
      fields: [
      {
        name: "phone_number",
        enabled: true,
        enabled_for_subroles: false
      },
      ]
    },
    {
      name: "custom_fields",
      fields: [
      {
        name: "has_parking",
        enabled: true,
        enabled_for_subroles: true,
        type: "BOOLEAN",
        id: 1,
        order: 10
      },
      {
        name: "special_description",
        enabled: true,
        enabled_for_subroles: true,
        type: "TEXT",
        id: 2,
        order: 11,
        max_len: 250
      },
      {
        name: "facilities",
        enabled: true,
        enabled_for_subroles: true,
        type: "MULTIPLE_SELECT",
        id: 3,
        order: 2,
        possible_values: ["handicapped access", "toilets", "break room"]
      },
      {
        name: "banner image",
        enabled: true,
        enabled_for_subroles: true,
        id: 4,
        type: "MULTIPLE_SELECT_IMAGE",
        order: 10,
        possible_values: ["image 1", "image 2", "image 3"],
        possible_images_labels: ["label image 1", label image 2, label image 3],
        possible_images_urls: ["url_of_image_1","url_of_image_2","url_of_image_3"],
      },
      ]
    }
    ]

  BusinessFields.Section:
    description: Business Fields sections permissions
    type: object
    properties:
      name:
        description: >
          Name of a the section. The structure of the fields inside it depends of the section and is described below.
        type: string
    discriminator:
      propertyName: name
      mapping:
        description: '#/components/schemas/BusinessFields.SectionNormal'
        hours: '#/components/schemas/BusinessFields.SectionNormal'
        photos: '#/components/schemas/BusinessFields.SectionNormal'
        contact: '#/components/schemas/BusinessFields.SectionNormal'
        address: '#/components/schemas/BusinessFields.SectionNormal'
        custom_fields: '#/components/schemas/BusinessFields.SectionCustomFields'

  BusinessFields.SectionNormal:
    allOf:
      - $ref: '#/schemas/BusinessFields.Section'
      - description: Business Fields Section
        type: object
        properties:
          fields:
            type: array
            items:
              $ref: '#/schemas/BusinessFields.Field'

  BusinessFields.SectionCustomFields:
    allOf:
      - $ref: '#/schemas/BusinessFields.Section'
      - description: Business Fields Section of Custom Fields
        type: object
        properties:
          fields:
            type: array
            items:
              $ref: '#/schemas/CustomFields.Metadata'

  BusinessFields.Field:
      description: Business Field
      type: object
      properties:
        name:
          description: Name of the field
          type: string
        enabled:
          description: Permission (enabled | disabled) of the field for the current user
          type: boolean
        enabled_for_subroles:
          description: >
            Permission (enabled | disabled) of the field for
            the users with a more restrictive role compared to the current user.
            <p> E.g. if the user is ORG_ADMIN: enabled_for_subroles describes
            the permissions of the field for all the GROUP_MANAGER and
            BUSINESS_MANAGER of the given organization.
            <p> E.g. if the user is PROVIDER: enabled_for_subroles describes
            the permissions of the field for all the ORG_ADMIN, GROUP_MANAGER and
            BUSINESS_MANAGER of the given provider.
          type: boolean

  CustomFields.Metadata:
    allOf:
      - $ref: '#/schemas/BusinessFields.Field'
      - description: Business Fields permissions
        type: object
        properties:
          type:
            description: >
              Type of the custom field.
              <p> Possible values are "TEXT", "INTEGER", "FLOAT", "BOOLEAN", "SINGLE_SELECT", "MULTIPLE_SELECT", "MULTIPLE_SELECT_IMAGE".
            type: string
            enum: ["TEXT", "INTEGER", "FLOAT", "BOOLEAN", "SINGLE_SELECT", "MULTIPLE_SELECT", "MULTIPLE_SELECT_IMAGE"]
          id:
            description: ID of the custom field.
            type: integer
          order:
            description: >
              Describes where the custom field is displayed on the Business Edit view of the Partoo App inside
              the ”Custom Field” section (/app/business/edit#)
            type: integer
        discriminator:
          propertyName: type
          mapping:
            TEXT: '#/components/schemas/CustomFields.Metadata.Text'
            INTEGER: '#/components/schemas/CustomFields.Metadata.Integer'
            FLOAT: '#/components/schemas/CustomFields.Metadata.Number'
            BOOLEAN: '#/components/schemas/CustomFields.Metadata'
            SINGLE_SELECT: '#/components/schemas/CustomFields.Metadata.Select'
            MULTIPLE_SELECT: '#/components/schemas/CustomFields.Metadata.Select'
            MULTIPLE_SELECT_IMAGE: '#/components/schemas/CustomFields.Metadata.MultipleSelectImage'

  CustomFields.Metadata.Text:
    allOf:
    - $ref: '#/schemas/CustomFields.Metadata'
    - type: object
      properties:
        max_len:
          type: integer
          description: If set, maximum number of characters that this Custom Field will accept.

  CustomFields.Metadata.Integer:
    allOf:
    - $ref: '#/schemas/CustomFields.Metadata'
    - type: object
      properties:
        min:
          type: integer
          description: If set, minimum value that this Custom Field will accept.
        max:
          type: integer
          description: If set, maximum value that this Custom Field will accept.

  CustomFields.Metadata.Number:
    allOf:
      - $ref: '#/schemas/CustomFields.Metadata'
      - type: object
        properties:
          min:
            type: number
            description: If set, minimum value that this Custom Field will accept.
          max:
            type: number
            description: If set, maximum value that this Custom Field will accept.

  CustomFields.Metadata.Select:
    allOf:
    - $ref: '#/schemas/CustomFields.Metadata'
    - type: object
      properties:
        possible_values:
          type: array
          description: List of values that the select will have
          items:
            type: string

  CustomFields.Metadata.MultipleSelectImage:
    allOf:
      - $ref: '#/schemas/CustomFields.Metadata'
      - type: object
        properties:
          possible_values:
            type: array
            description: List of values that the select will have
            items:
              type: string
          possible_images_labels:
            type: array
            description: List of labels corresponding to each value
            items:
              type: string
          possible_images_urls:
            type: array
            description: List of image urls corresponding to each value
            items:
              type: string
  TemplateId:
    type: integer
    description: Template id
    example: 34
  TemplateUpdateDate:
    type: string
    description: Template update date
    format: datetime
    example: 2017-08-01T19:15:54.256000+02:00
  TemplateCreationDate:
    type: string
    description: Template creation date
    format: datetime
    example: 2017-08-01T19:15:54.256000+02:00
  TemplateLanguage:
    type: string
    description: Template language
    enum: ['fr', 'es', 'it', 'en', 'pt-br']
  TemplateTitle:
    type: string
    description: Template title
  TemplateText:
    description:  |
      The content of the reply template.

      Placeholders are recognisable within the text by this exact markup `@[](name_of_the_placeholder)`.
      Where `name_of_the_placeholder` is the `value` field taken from the `GET placeholders` operation.

      Example of usable placeholder values: `client_full_name`, `client_first_name`, `business_name`, `my_first_name`.
    type: string
    example: "hello @[](client_full_name),

    Thanks from the team at @[](business_name).

    @[](my_first_name)"
  TemplateNegative:
    type: boolean
    description: Template is made for negative reviews (ex from 1 to 2 stars on gmb)
  TemplateNeutral:
    type: boolean
    description: Template is made for neutral reviews (ex 3 stars on gmb)
  TemplatePositive:
    type: boolean
    description: Template is made for positive reviews (ex from 4 to 5 stars on gmb)
  Template:
    description: Review's reply tempate
    type: object
    properties:
      id:
        $ref: '#/schemas/TemplateId'
      org_id:
        $ref: '#/schemas/OrgId'
      update_date:
        $ref: '#/schemas/TemplateUpdateDate'
      creation_date:
        $ref: '#/schemas/TemplateCreationDate'
      language:
        $ref: '#/schemas/TemplateLanguage'
      title:
        $ref: '#/schemas/TemplateTitle'
      text:
        $ref: '#/schemas/TemplateText'
      negative:
        $ref: '#/schemas/TemplateNegative'
      neutral:
        $ref: '#/schemas/TemplateNeutral'
      positive:
        $ref: '#/schemas/TemplatePositive'
  TemplatePlaceholder:
    description: |
      Reply tempates available placeholders.
      A template placeholder is a dynamically updated word depending on the context.
    type: object
    properties:
      id:
        type: integer
        description: Placeholder id
        example: 2
      value:
        type: string
        description: |
          Placeholder value

          This value must be used within the placeholder markup `@[](placeholder_value)` in a template `text` in order to work properly.
        example: "my_first_name"

  GooglePostId:
    description: Google Post id
    type: integer
    example: 34

  GooglePostTopicType:
    description: Topic type of the google post, news/event/offer
    type: string
    example: news

  GooglePostSummary:
    description: Summary of the google post
    type: string
    example: Your business will now open until 20:00

  GooglePostMediaUrl:
    description: Url of the photo of the google post
    type: string
    example: https://www.my-photo.jpeg

  GooglePostCallToActionType:
    description: Button you want to put on the google post, book/order/shop/learn_more/sign_up/call/no_cta
    type: string
    example: no_cta

  GooglePostCallToActionUrl:
    description: Url that will be used for redirection when clicking on the call to action button.
      In case of call or no_cta call_to_action_type, no call_to_action_url is needed.
    type: string
    example: https://www.partoo.co

  GooglePostScheduledStartTime:
    description: if you don't want to publish it right away (will be publish immediatly by default).
      The timezone is mandatory
    type: string
    example: 2020-01-01T12:00:00+02:00

  GooglePostTitle:
    description: Name of the event
    type: string
    example: Big sales

  GooglePostStartDatetime:
    description: Event start time. The timezone is mandatory
    type: string
    example: 2020-01-02T12:00:00+02:00

  GooglePostEndDatetime:
    description: Event end time. The timezone is mandatory
    type: string
    example: 2020-01-015T12:00:00+02:00

  GooglePostCouponCode:
    description: Offer code that is usable in store or online
    type: string
    example: PROMO25

  GooglePostRedeemOnlineUrl:
    description: Online link to redeem offer
    type: string
    example: https://www.partoo.co

  GooglePostTermsConditions:
    description: Terms and conditions of the offer
    type: string
    example: These are the conditions

  GooglePostEvent:
    description: Google Post Event, required only for event and offer topic types
    type: object
    required:
      - title
      - start_datetime
      - end_datetime
    properties:
      title:
        $ref: '#/schemas/GooglePostTitle'
      start_datetime:
        $ref: '#/schemas/GooglePostStartDatetime'
      end_datetime:
        $ref: '#/schemas/GooglePostEndDatetime'

  GooglePostOffer:
    description: Google Post Offer, required only for offer topic type
    type: object
    properties:
      coupon_code:
        $ref: '#/schemas/GooglePostCouponCode'
      redeem_online_url:
        $ref: '#/schemas/GooglePostRedeemOnlineUrl'
      terms_conditions:
        $ref: '#/schemas/GooglePostTermsConditions'

  GooglePostMediaFormat:
    description: type of the media, can only be of type PHOTO
    type: string
    example: PHOTO

  GooglePostMedia:
    description: Media
    type: object
    properties:
      media_url:
        $ref: '#/schemas/GooglePostMediaUrl'
      media_format:
        $ref: '#/schemas/GooglePostMediaFormat'

  GooglePostLanguageCode:
    description: The language of the google post
    type: string

  GooglePostViewCount:
    description: The number of times the local post was viewed on Google Search
    type: integer
    example: 200

  GooglePostClickCount:
    description: The number of times the local post was viewed on Google Search
    type: integer
    example: 155

  GooglePostState:
    description: The state of the post, indicating what part of its lifecycle it is in
    type: string
    example: pending

  GooglePostCreatedOnPartoo:
    description: Whether or not the post was created on partoo
    type: boolean

  GooglePostUpdatedOnPartoo:
    description: Whether or not the post was updated on partoo
    type: boolean

  GooglePostSearchUrl:
    description: The link to the local post in Google search
    type: string

  GooglePostBusinessInfo:
    description: The name and address of the business
    type: string

  GooglePostGoogleCreationDate:
    description: Time of the creation of the post on Google
    type: string

  GooglePostIsExpired:
    description: Whether or not the post is expired
    type: boolean

  GooglePost:
    description: Google Post
    type: object
    properties:
      id:
        $ref: '#/schemas/GooglePostId'
      business_id:
        $ref: '#/schemas/BusinessId'
      topic_type:
        $ref: '#/schemas/GooglePostTopicType'
      summary:
        $ref: '#/schemas/GooglePostSummary'
      scheduled_start_time:
        $ref: '#/schemas/GooglePostScheduledStartTime'
      google_post_event:
        $ref: '#/schemas/GooglePostEvent'
      google_post_offer:
        $ref: '#/schemas/GooglePostOffer'
      google_post_media:
        $ref: '#/schemas/GooglePostMedia'
      created_at:
        $ref: '#/schemas/CreatedDate'
      updated_at:
        $ref: '#/schemas/UpdatedDate'
      language_code:
        $ref: '#/schemas/GooglePostLanguageCode'
      view_count:
        $ref: '#/schemas/GooglePostViewCount'
      click_count:
        $ref: '#/schemas/GooglePostClickCount'
      state:
        $ref: '#/schemas/GooglePostState'
      created_on_partoo:
        $ref: '#/schemas/GooglePostCreatedOnPartoo'
      updated_on_partoo:
        $ref: '#/schemas/GooglePostUpdatedOnPartoo'
      search_url:
        $ref: '#/schemas/GooglePostSearchUrl'
      business_info:
        $ref: '#/schemas/GooglePostBusinessInfo'
      google_creation_date:
        $ref: '#/schemas/GooglePostGoogleCreationDate'
      is_expired:
        $ref: '#/schemas/GooglePostIsExpired'

  # DEPRECATED fields
  Promo:
    deprecated: true
    description: Business promotions
    type: object
    required:
      - title
      - description
      - begin
      - end
    properties:
      title:
        type: string
        description: Promo title
      description:
        type: string
        description: Promo description
      term_of_use:
        type: string
        description: Promo term of use
      additional_informations:
        type: string
        description: Promo additional informations
      begin:
        type: number
        description: Promo start timestamp
      end:
        type: number
        description: Promo end timestamp
      images:
        type: array
        description: Promo images to be displayed
        items:
          type: string
          format: uri
      client_offer_url:
        description: Promo URL
        type: string
        format: uri
      promo_url:
        description: URL of the website
        type: string
        format: uri
  News:
    deprecated: true
    type: object
    required:
      - title
      - description
    properties:
      title:
        type: string
        description: News title
      description:
        type: string
        description: News description
  RequestStatus:
    description: Request status
    type: string
    enum:
      - success
  SubscriptionDetails:
    type: object
    description: The details on the product subscription
    properties:
      status:
        type: string
        enum: ["inactive", "active"]
      canceling_date:
        type: number
        description: timestamp
  Report:
    description: Report name
    type: string
    example: "review_management_weekly"
parameters:
  query_filter_by_country_required:
    in: query
    name: country
    required: true
    schema:
      type: string
    description: Filter by country - use ISO 3166 alpha2 code (i.e. use “FR” for France)
  business_id:
    in: path
    name: business_id
    required: true
    schema:
      type: string
    description: Business id
  path_org_id:
    in: path
    name: org_id
    required: true
    schema:
      type: integer
    description: Organisation id
  path_provider_label:
    in: path
    name: label
    required: true
    schema:
      type: string
    description: Name of the provider
  path_user_id:
    in: path
    required: true
    name: user_id
    schema:
      type: string
    description: User id
  query_page:
    in: query
    name: page
    schema:
      type: integer
      default: 0
    description: Page number. 30 results per page
  query_page_100:
    in: query
    name: page
    schema:
      type: integer
      default: 1
    description: Page number. Starts at 1. 100 results per page.
  query_org_id:
    in: query
    name: org_id
    schema:
      type: integer
    description: Organisation id
  query_category_lang:
    in: query
    name: lang
    required: true
    schema:
      type: string
      enum: ['fr', 'es', 'it', 'en', 'de']
    description: Language in which the categories are going to be displayed
  query_category_country:
    in: query
    name: country
    required: false
    description: Filter by country where categories are availables
    schema:
      type: string
      enum: ['EN','FR', 'ES', 'IT', 'BR']
  query_category_state:
    in: query
    name: state
    required: false
    schema:
      type: string
      enum: ['OK', 'DEPRECATED']
  query_category_block_push_long:
    in: query
    name: block_push_long_description_on_gmb
    description: Filter on `block_push_long_description_on_gmb` param (boolean indicating if the business long description can be pushed to GMB when the business belongs to this category)
    required: false
    schema:
      type: boolean
  query_category_search_query:
    in: query
    name: search_query
    description: Fuzzy search on gmb_id and names translations
    required: false
    schema:
      type: string
  query_category_sort_by:
    in: query
    name: sort_by
    description: Sort query by gmb_id
    required: false
    schema:
      type: string
      enum: ['gmb_id']
  query_category_order_by:
    in: query
    name: order_by
    description: Order query by asc or desc
    required: false
    schema:
      type: string
      enum: ['asc', 'desc']
  query_category_return_live:
    in: query
    name: return_live
    description: Return the corresponding live category instead of the requested category
    required: false
    schema:
      type: boolean
  query_filter_by_org_id:
    in: query
    name: org_id
    schema:
      type: integer
    required: false
    description: Filter by organisation id
  query_filter_by_group_id:
    in: query
    name: group_id
    schema:
      type: integer
    required: false
    description: Filter by group id
  query_filter_by_email:
    in: query
    name: email
    schema:
      type: string
      format: email
    description: Filter by email
  query_filter_by_user_status:
    in: query
    name: status
    schema:
      $ref: '#/schemas/UserStatus'
    description: Filter by status
  query_filter_by_fuzzy_query_on_business:
    in: query
    name: query
    schema:
      type: string
    required: false
    description: Parameter to fuzzy search businesses on city, zipcode and name
  query_filter_by_business_status:
    in: query
    name: status
    schema:
      $ref: '#/schemas/BusinessStatus'
  query_filter_by_zipcode:
    in: query
    name: zipcode
    schema:
      type: string
    required: false
    description: Filter by zipcode
  query_filter_by_city:
    in: query
    name: city
    schema:
      type: string
    required: false
    description: Filter by city
  query_filter_by_business_code:
    in: query
    name: code
    schema:
      type: string
    required: false
    description: Filter by code
  query_filter_by_business_name:
    in: query
    name: name
    schema:
      type: string
    required: false
    description: Filter by name
  query_filter_by_business_clean_name:
    in: query
    name: clean_name
    schema:
      type: string
    required: false
    deprecated: true
    description:  <p><code>It will be removed in November 2020</code>. Filter by clean name.</p>
  query_filter_by_country:
    in: query
    name: country
    schema:
      type: string
    required: false
    description: Filter by country - use ISO 3166 alpha2 code (i.e. use “FR” for France)
  query_filter_by_business_promo:
    in: query
    name: has_promo
    deprecated: true
    schema:
      type: string
      enum: ["True", "False"]
    required: false
    description: Retrieve only businesses having promotional offers
  query_filter_by_business_modification_timestamp:
    in: query
    name: timestamp
    deprecated: true
    schema:
      type: number
    required: false
    description: Filter by modified attribute (modified >= timestamp)
  query_filter_by_business_subscription_to_review_management:
    in: query
    deprecated: true
    name: subscribed_to_rm
    schema:
      type: string
      enum:
        - "True"
        - "False"
    required: false
    description: Filter by current subscription to `review_management`
  query_filter_by_business_subscription_to_presence_management:
    in: query
    deprecated: true
    name: subscribed_to_pm
    schema:
      type: string
      enum:
        - "True"
        - "False"
    required: false
    description: Filter by current subscription to `presence_management
  query_business__in:
    in: query
    name: business__in
    description: Filter by business ids
    schema:
      type: array
      items:
        $ref: '#/schemas/BusinessId'
  query_business__notin:
    in: query
    name: business__notin
    description: Filter out by business ids
    schema:
      type: array
      items:
        $ref: '#/schemas/BusinessId'
  query_content__isnull:
    in: query
    name: content__isnull
    description: >
      Filter by content.
      If set to `true`, the endpoint will only return wih no content.
    schema:
      type: string
      enum:
        - true
        - false
  query_review_bucket:
    in: query
    name: bucket
    schema:
      type: string
      enum: ['day', 'week', 'month', 'year']
    description: Defining the time range of a data bucket
  query_review_cumulative:
    in: query
    name: cumulative
    schema:
      type: string
      enum: ['true', 'false']
    description: mark if the queried data accumulated from the former data
  query_analytics_date__gte:
    in: query
    name: filter_date__gte
    description: >
      Filter by `date`.
      Return all the analytics whose `date` >= `given_date`.
    schema:
      type: string
      format: datetime
  query_analytics_date__lte:
    in: query
    name: filter_date__lte
    description: >
      Filter by `date`.
      Return all the analytics whose `filter_date` <= `given_date`.
    schema:
      type: string
      format: datetime
  query_review_update_date__gte:
    in: query
    name: update_date__gte
    description: >
      Filter by `update_date`.
      Return all the reviews whose `update_date` >= `given_date`.
    schema:
      type: string
      format: datetime
  query_review_update_date__lte:
    in: query
    name: update_date__lte
    description: >
      Filter by `update_date`.
      Return all the reviews whose `update_date` <= `given_date`.
    schema:
      type: string
      format: datetime
  query_partner__in:
    in: query
    name: partner__in
    description: Filter by `partner`
    schema:
      type: array
      items:
        $ref: '#/schemas/ReviewPublisherLabel'
  query_review_state:
    in: query
    name: state__in
    description: Filter by state
    schema:
      type: array
      items:
        $ref: '#/schemas/ReviewState'
  metrics:
    in: query
    name: metrics
    required: true
    schema:
      type: string
      enum: [queries_direct, queries_indirect, queries_branded, queries_discovery, views_maps, views_search,
              actions_website, actions_phone, actions_driving_directions]
      example: queries_direct
    description: List of analytics to return. At least one in that list.
  dimensions:
    in: query
    name: dimensions
    schema:
      type: string
      enum: [business, day, week, month, year]
    description: |
      How the returned data will be aggregated. At most 'business' and one time dimensions of the list.
      If no dimension is given, the request will return the sum of each metric for all requested days and businesses.
  order:
    in: query
    name: order
    schema:
      type: string
      enum: [<object>__asc, <object>__desc]
      example: queries_direct__desc
    description: Where *object* is either a dimension or a metric and is used in the request. At most one in the list.
  export_email:
    in: query
    name: email
    required: true
    schema:
      type: string
      format: email
      example: perceval@kaamelott.com
      description: email address the export will be sent to
  path_template_id:
    in: path
    name: template_id
    required: true
    schema:
      type: number
    description: Template id
  query_positive_template:
    in: query
    name: positive
    description: Filter on templates made to answer positive reviews (ex from 4 to 5 stars on gmb).
    required: false
    schema:
      type: boolean
  query_neutral_template:
    in: query
    name: neutral
    description: Filter on templates made to answer neutral reviews (ex 3 stars on gmb).
    required: false
    schema:
      type: boolean
  query_negative_template:
    in: query
    name: negative
    description: Filter on templates made to answer negative reviews (ex from 1 to 2 stars on gmb).
    required: false
    schema:
      type: boolean
  query_language__in:
    in: query
    name: language__in
    description: Filter on templates in the specified languages.
    required: false
    schema:
      type: array
      items:
        $ref: '#/schemas/TemplateLanguage'
      example: fr,it
  query_title_query:
    in: query
    name: title_query
    schema:
      type: string
    required: false
    description: Filter on templates based on their title
  query_text_query:
    in: query
    name: text_query
    schema:
      type: string
    required: false
    description: Filter on templates based on their text
  path_google_post_id:
    in: path
    name: google_post_id
    required: true
    schema:
      type: number
    description: Google Post id
  query_google_post_title_query:
    in: query
    name: title_query
    schema:
      type: string
    required: false
    description: Filter google post based on their title
  query_google_post_summary_query:
    in: query
    name: summary_query
    schema:
      type: string
    required: false
    description: Filter google post based on their summary
  query_google_post_start_datetime:
    in: query
    name: start_datetime
    schema:
      type: string
    required: false
    description: Filter google post based on their start time
  query_google_post_end_datetime:
    in: query
    name: end_datetime
    schema:
      type: string
    required: false
    description: Filter google post based on their end time
  query_google_post_is_expired:
    in: query
    name: is_expired
    schema:
      type: boolean
    required: false
    description: Filter google post based on whether or not it is expired
responses:
  400:
    description: Your request is incorrect
    content:
      application/json:
        schema:
          description: >
            Error that occcurs when your request is incorrect
          properties:
            errors:
              type: object
              description: The detail of the error encountered
              properties:
                json:
                  type: object
  401:
    description: You are not authenticated
    content:
      application/json:
        schema:
          description: Error that occurs when you are not authenticated
          type: object
          properties:
            errors:
              type: object
              description: The detail of the error encountered
              properties:
                authentication:
                  type: string
                  default: "User not authenticated"
  403:
    description: >
      You are not allowed to perform this action
    content:
      application/json:
        schema:
          description: >
            Error that occurs when you are authenticated but you are trying to perform an action you are not
            allowed to perform
          type: object
          properties:
            errors:
              type: object
              description: The detail of the error encountered
              properties:
                authorization:
                  type: string
                  default: "Operation not allowed"
  404:
    description: Resource does not exist
    content:
      application/json:
        schema:
          description: Error that occcurs when you are trying to reach a resource that does not exist
          type: object
          properties:
            errors:
              type: object
              description: The detail of the error encountered
              properties:
                json:
                  type: string
                  default: "Resource not found"
