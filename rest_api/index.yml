openapi: "3.0.0"

info:
  $ref: ./info/index.yml

servers:
  $ref: ./servers/index.yml

tags:
  $ref: ./tags/index.yml

paths:
  # BOOSTER endpoint
  /review_booster/send_invitation:
    post:
      $ref: ./paths/review_booster/send_invitation/post.yml
  /review_booster/invitation_status:
    get:
      $ref: ./paths/review_booster/invitation_status/get.yml
  /review_booster/search-invitation:
    get:
      $ref: ./paths/review_booster/search-invitation/get.yml
  # USER endpoints
  /user/me:
    get:
      $ref: ./paths/user/get_me.yml
  /user:
    post:
      $ref: ./paths/user/post.yml
  /user/{user_id}:
    get:
      $ref: ./paths/user/get_by_id.yml
    post:
      $ref: ./paths/user/post_update.yml
    delete:
      summary: Delete user
      description: >
        This endpoint lets you delete a user.
        You need to have `WRITE` access to this user.
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/UserId'
                  status:
                    type: string
                    enum: ["success"]
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /user/search:
    get:
      $ref: ./paths/user/get_search.yml
  /user/search/count:
    get:
      tags:
        - Users
      summary: Count users
      description: >
        This endpoint lets you count the users you have `READ` access to.
        You can apply filters on this request.
      operationId: searchUserCount
      parameters:
        - $ref: '#/components/parameters/query_filter_by_email'
        - $ref: '#/components/parameters/query_filter_by_org_id'
        - $ref: '#/components/parameters/query_filter_by_user_status'
        - in: query
          name: query
          schema:
            type: string
          description: To perform a fuzzy search on user
        - in: query
          name: display_business_ids
          schema:
            type: string
            enum: ["True", "False"]
            default: "True"
          description: The endpoint wonâ€™t return the `business_ids` when the value is `False`
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /user/{user_id}/invite:
    post:
      tags:
        - Users
      summary: Re-invite user
      description: >
        This endpoint lets you trigger a new invitation email to an `invited` user.
        You need to have `WRITE` access to this user.
        The email can only be sent once every 5 minutes.
      operationId: reinviteUser
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /api/v2/user/{user_id}/businesses:
    get:
      tags:
      - Users
      summary: Get user businesses
      description: >
        This endpoint lets you retrieve the list of businesses which the selected user has `READ` access to.
      operationId: getUserBusinesses
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      businesses:
                        description: User businesses
                        type: array
                        items:
                          $ref: '#/components/schemas/Business'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  /authorize:
    post:
      tags:
        - ApiKeys
      summary: Generate API key
      description: >
        This endpoint lets you generate an API key either permanent (ie. will work until revoked)
        or consumable (ie. will work only for one connection).
        If you are generating the API key to log your user in the JS API, it is preferable to generate consumable api key.
      operationId: generateAPIKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  $ref: '#/components/schemas/UserId'
                consumable:
                  type: string
                  default: "False"
                  enum: ["True, False"]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserId'
                  user_authorization_token:
                    description: New API key
                    type: string
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /authorize/list:
    get:
      summary: List user API keys
      description: >
        This endpoint let you list all the current valid tokens for a given user.
        You need to have `READ` access to this user.
      operationId: listAPIKeys
      tags:
        - ApiKeys
      parameters:
        - in: query
          name: user_id
          schema:
            $ref: '#/components/schemas/UserId'
          description: User id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserId'
                  user_authorization_tokens:
                    type: array
                    items:
                      type: string
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /authorize/revoke:
    post:
      summary: Revoke API key
      description: This endpoint let you revoke an API key of one of your user.
      operationId: revokeAPIKey
      tags:
        - ApiKeys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_authorization_token
                - user_id
              properties:
                user_authorization_token:
                  type: string
                  description: The API key you want to revoke
                user_id:
                  $ref: '#/components/schemas/UserId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserId'
                  user_authorization_tokens:
                    type: array
                    items:
                      type: string
                    description: Remaining valid API keys
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  # REVIEWS endpoints
  /reviews:
    get:
      summary: Search for reviews
      description: >
        This endpoint let you search for the reviews of your businesses.
        To access the reviews of a business you need to have `READ` access on it.
        You can access reviews from **Google My Business**, **Facebook** & **Foursquare**.
        The response is paginated (30 results per page).
      operationId: searchReviews
      tags:
        - Reviews
      parameters:
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_business__notin'
        - $ref: '#/components/parameters/query_content__isnull'
        - $ref: '#/components/parameters/query_review_update_date__gte'
        - $ref: '#/components/parameters/query_review_update_date__lte'
        - $ref: '#/components/parameters/query_review_rating__in'
        - $ref: '#/components/parameters/query_review_state'
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      reviews:
                        description: Filtered reviews
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /reviews/qualitative-evolution:
    get:
      tags:
        - Reviews
      summary: Qualitative evolution
      description: Get the average note in a specific time range
      parameters:
        - $ref: '#/components/parameters/query_review_bucket'
        - $ref: '#/components/parameters/query_review_cumulative'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      ReviewQualitativeEvaluation:
                        description: Qualitative evaluation of the review from the server
                        type: object
                        properties:
                          date:
                            type: string
                            format: datetime
                            example: '2019-11-29'
                          added:
                            type: number
                            format: integer
                            example: 50
                          average:
                            type: number
                            format: float
                            example: 4.54
                          cum_sum:
                            type: number
                            format: float
                            example: 50.0
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/quantitative-evolution:
    get:
      tags:
      - Reviews
      summary: Quantitative evolution
      description: Get the sum note in a specific time range
      parameters:
      - $ref: '#/components/parameters/query_review_bucket'
      - $ref: '#/components/parameters/query_review_update_date__gte'
      - $ref: '#/components/parameters/query_review_update_date__lte'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    ReviewQualitativeEvaluation:
                      type: object
                      properties:
                        date:
                          type: string
                          format: string
                          example: '2019-11-29'
                        added:
                          type: number
                          format: integer
                          example: 50
                        previous_sum:
                          type: number
                          format: float
                          example: 0
                        cum_sum:
                          type: number
                          format: float
                          example: 50
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/{review_id}/reply/edit:
    post:
      tags:
      - Reviews
      summary: Post or Edit a Reply to a review
      description: This endpoint lets you reply or edit your reply to a review.
      operationId: ReplyToReview
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            $ref: '#/components/schemas/ReviewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post/edit a reply
              type: object
              required:
                - state
              properties:
                  content:
                    description: Content of your Reply
                    type: string
                    format: text
                  state:
                    description: State of the review
                    type: string
                    enum: ["treated", "not_treated"]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/{review_id}/reply/delete:
    delete:
      tags:
        - Reviews
      summary: Delete the reply to a review
      description: >
        This endpoint lets you delete the reply to a review
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            $ref: '#/components/schemas/ReviewId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/keywords-count:
    post:
      tags:
      - Reviews
      operationId: keywordsCount
      summary: Get review count by keyword
      description: >
        This endpoint lets you access your review counts by keyword.
        You need to have `READ` access on the review's business.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - keywords
              properties:
                keywords:
                  description: Array of keywords (cannot contain empty strings, strings are trimmed and put to lowercase)
                  type: array
                  maxItems: 12
                  minItems: 1
                  items:
                    type: string
      responses:
        200:
          description: Array of keyword data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    keyword:
                      type: string
                      minLength: 1
                    count:
                      type: number
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  # ORG endpoints
  /org/{org_id}:
    get:
      tags:
        - Organisations
      summary: Get organisation
      description: >
        This endpoint lets you retrieve all the detail about a specific organisation.
        You need to have `READ` access to this organisation.
      parameters:
        - $ref: '#/components/parameters/path_org_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Organisations
      summary: Update organisation
      description: >
        This endpoint lets you update the information of an organisation.
        You need to have `WRITE` access on the organisation.
      parameters:
        - $ref: '#/components/parameters/path_org_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The object to send to update an organisation
              properties:
                name:
                  $ref: '#/components/schemas/OrgName'
                alias:
                  $ref: '#/components/schemas/OrgAlias'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  org_id:
                    $ref: '#/components/schemas/OrgId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Organisations
      summary: Delete organisation
      description: >
        This endpoint lets you delete an organisation.
        You need to have `WRITE` access on your provider.
        When an organisation gets deleted all the resources linked to it are deleted (users and businesses).
        If the organisation still has businesses or users,
        it would raise an error if you do not indicate `force="True"` in the JSON body.
      parameters:
        - $ref: '#/components/parameters/path_org_id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                force:
                  description: Force the deletion of organisation even if there are still users and business linked to it
                  type: string
                  enum:
                    - "True"
                    - "False"
                  default: "False"
      responses:
        200:
          description: OK
          content:
              application/json:
                schema:
                  type: object
                  description: Response object
                  properties:
                    status:
                      $ref: '#/components/schemas/RequestStatus'
                    org_id:
                      $ref: '#/components/schemas/OrgId'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /org/search:
    get:
      tags:
        - Organisations
      summary: Search for organisations
      description: >
        This endpoint lets you search for organisations using filters.
        The response is paginated (30 results per page).
      parameters:
        - $ref: '#/components/parameters/query_org_id'
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object return by the API
                properties:
                  page:
                    $ref: '#/components/schemas/current_page'
                  max_page:
                    $ref: '#/components/schemas/max_page'
                  count:
                    $ref: '#/components/schemas/count'
                  orgs:
                    type: array
                    description: The organisations complying with filter (30 max per page)
                    items:
                      $ref: '#/components/schemas/Org'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /org:
    post:
      tags:
        - Organisations
      summary: Create organisation
      description: >
        This endpoint lets you create an organisation.
        You have `WRITE` access on your provider (ie. only possible if you have `PROVIDER` role).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: JSON to create an organisation
              required:
                - name
              properties:
                name:
                  $ref: '#/components/schemas/OrgName'
                alias:
                  $ref: '#/components/schemas/OrgAlias'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
                  org_id:
                    $ref: '#/components/schemas/OrgId'
                  alias:
                    $ref: '#/components/schemas/OrgAlias'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'

  # BUSINESS endpoints
  /business/search:
    get:
      operationId: searchBusinesses
      tags:
        - Businesses
      summary: Search for businesses
      description: >
        This lets you search among the businesses you have `READ` access to. You can use several filters.
        The response is paginated (30 results per page).
      parameters:
        - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
        - $ref: '#/components/parameters/query_filter_by_org_id'
        - $ref: '#/components/parameters/query_filter_by_country'
        - $ref: '#/components/parameters/query_filter_by_business_name'
        - $ref: '#/components/parameters/query_filter_by_business_status'
        - $ref: '#/components/parameters/query_filter_by_zipcode'
        - $ref: '#/components/parameters/query_filter_by_city'
        - $ref: '#/components/parameters/query_filter_by_business_code'
        - $ref: '#/components/parameters/query_filter_by_business_modification_timestamp'
        - $ref: '#/components/parameters/query_filter_by_business_subscription_to_review_management'
        - $ref: '#/components/parameters/query_filter_by_business_subscription_to_presence_management'
        - $ref: '#/components/parameters/query_filter_by_business_promo'
        - $ref: '#/components/parameters/query_filter_by_business_code'
        - $ref: '#/components/parameters/query_page'
        - in: query
          name: connected_to_gmb_location
          schema:
            type: string
            enum:
              - "True"
              - "False"
          required: false
          description: Filter by current link to a GMB location
        - in: query
          name: connected_to_facebook_location
          schema:
            type: string
            enum:
              - "True"
              - "False"
          required: false
          description: Filter by current link to a Facebook location
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      businesses:
                        type: array
                        description: List of Businesses
                        items:
                          $ref: '#/components/schemas/Business'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /business:
    post:
      tags:
        - Businesses
      summary: Create business
      operationId: createBusiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              required:
                - name
                - country
                - zipcode
                - city
                - categories
              properties:
                name:
                  $ref: '#/components/schemas/BusinessName'
                org_id:
                  $ref: '#/components/schemas/BusinessOrgId'
                country:
                  $ref: '#/components/schemas/BusinessCountry'
                zipcode:
                  $ref: '#/components/schemas/BusinessZipcode'
                city:
                  $ref: '#/components/schemas/BusinessCity'
                region:
                  $ref: '#/components/schemas/BusinessRegion'
                categories:
                  description: Array of categories ids
                  type: array
                  minItems: 1
                  items:
                    type: string
                code:
                  $ref: '#/components/schemas/BusinessCode'
                status:
                  $ref: '#/components/schemas/BusinessStatus'
                address_details:
                  $ref: '#/components/schemas/AddressDetails'
                address2:
                  type: string
                lat:
                  $ref: '#/components/schemas/Latitude'
                long:
                  $ref: '#/components/schemas/Longitude'
                website_url:
                  $ref: '#/components/schemas/BusinessWebsite'
                facebook_url:
                  $ref: '#/components/schemas/BusinessFacebookPage'
                twitter_url:
                  $ref: '#/components/schemas/BusinessTwitter'
                description_short:
                  $ref: '#/components/schemas/BusinessShortDescription'
                description_long:
                  $ref: '#/components/schemas/BusinessLongDescription'
                open_hours:
                  $ref: '#/components/schemas/OpenHours'
                specific_hours:
                  $ref: '#/components/schemas/SpecificHours'
                contacts:
                  $ref: '#/components/schemas/BusinessContacts'
                photos:
                  $ref: '#/components/schemas/Photos'
                national_identification_number:
                  $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
                videos:
                  $ref: '#/components/schemas/BusinessVideos'
                news:
                  $ref: '#/components/schemas/BusinessNews'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
                  id:
                    $ref: '#/components/schemas/BusinessId'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /business/connections_stats:
    get:
      tags:
        - Businesses
      operationId: getBusinessConnectionsStats
      summary: Get statistics about connected businesses
      description: >
        This endpoint lets you access the number of businesses connected to Google My Business and Facebook.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: >
                      Total number of businesses.
                  linked_to_gmb_count:
                    type: integer
                    description: >
                      Number of businesses linked to Google My Business.
                  linked_to_facebook_count:
                    type: integer
                    description: >
                      Number of businesses linked to Facebook.
        401:
          $ref: '#/components/responses/401'
  /business/{business_id}:
    get:
      tags:
        - Businesses
      operationId: getBusiness
      summary: Get business
      description: >
        This endpoint lets you access to the information of a business.
        You need to have `READ`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Businesses
      operationId: updateBusiness
      summary: Update business
      description: >
        This endpoint lets you access to the information of a business.
        You need to have `WRITE` access on this business.
        Only indicated values be taken into account (it works like a `PATCH`).
      parameters:
        - $ref: '#/components/parameters/business_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/BusinessName'
                org_id:
                  $ref: '#/components/schemas/BusinessOrgId'
                country:
                  $ref: '#/components/schemas/BusinessCountry'
                zipcode:
                  $ref: '#/components/schemas/BusinessZipcode'
                city:
                  $ref: '#/components/schemas/BusinessCity'
                region:
                  $ref: '#/components/schemas/BusinessRegion'
                categories:
                  description: Array of categories ids
                  type: array
                  minItems: 1
                  items:
                    type: string
                code:
                  $ref: '#/components/schemas/BusinessCode'
                status:
                  $ref: '#/components/schemas/BusinessStatus'
                address_details:
                  $ref: '#/components/schemas/AddressDetails'
                address2:
                  description: Row address string
                  type: string
                lat:
                  $ref: '#/components/schemas/Latitude'
                long:
                  $ref: '#/components/schemas/Longitude'
                website_url:
                  $ref: '#/components/schemas/BusinessWebsite'
                facebook_url:
                  $ref: '#/components/schemas/BusinessFacebookPage'
                twitter_url:
                  $ref: '#/components/schemas/BusinessTwitter'
                description_short:
                  $ref: '#/components/schemas/BusinessShortDescription'
                description_long:
                  $ref: '#/components/schemas/BusinessLongDescription'
                open_hours:
                  $ref: '#/components/schemas/OpenHours'
                specific_hours:
                  $ref: '#/components/schemas/SpecificHours'
                contacts:
                  $ref: '#/components/schemas/BusinessContacts'
                photos:
                  $ref: '#/components/schemas/Photos'
                national_identification_number:
                  $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
                videos:
                  $ref: '#/components/schemas/BusinessVideos'
                news:
                  $ref: '#/components/schemas/BusinessNews'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Businesses
      operationId: deleteBusiness
      summary: Delete business
      description: >
        This endpoint lets you delete a business.
        You need to have `WRITE`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/BusinessId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/partner_urls:
    get:
      tags:
        - Businesses
      operationId: getBusinessPartnerUrls
      summary: Get business urls on publishers
      description: >
        This endpoint lets you access to the urls corresponding to the business on publisher websites.
        You need to have `READ` access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: URL by publisher
                properties:
                  apple:
                    type: string
                    format: uri
                  le118000:
                    type: string
                    format: uri
                  les_horaires:
                    type: string
                    format: uri
                  wemap:
                    type: string
                    format: uri
                  here:
                    type: string
                    format: uri
                  google_my_business:
                    type: string
                    format: uri
                  hoodspot:
                    type: string
                    format: uri
                  foursquare:
                    type: string
                    format: uri
                  facebook:
                    type: string
                    format: uri
                  justacote:
                    type: string
                    format: uri
                  navmii:
                    type: string
                    format: uri
                  bing_fr:
                    type: string
                    format: uri
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/integration_status:
    get:
      tags:
        - Businesses
      operationId: getBusinessIntegrationStatus
      summary: Get business integration data
      description: >
        This endpoint lets you access to the data summarizing the integration state of a business on publishers.
        You need to have `READ` access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: URL by publisher
                properties:
                  apple:
                    $ref: '#/components/schemas/IntegrationData'
                  le118000:
                    $ref: '#/components/schemas/IntegrationData'
                  les_horaires:
                    $ref: '#/components/schemas/IntegrationData'
                  wemap:
                    $ref: '#/components/schemas/IntegrationData'
                  here:
                    $ref: '#/components/schemas/IntegrationData'
                  google_my_business:
                    $ref: '#/components/schemas/IntegrationData'
                  hoodspot:
                    $ref: '#/components/schemas/IntegrationData'
                  foursquare:
                    $ref: '#/components/schemas/IntegrationData'
                  facebook:
                    $ref: '#/components/schemas/IntegrationData'
                  justacote:
                    $ref: '#/components/schemas/IntegrationData'
                  navmii:
                    $ref: '#/components/schemas/IntegrationData'
                  bing_fr:
                    $ref: '#/components/schemas/IntegrationData'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/subscription:
    get:
      tags:
        - Businesses
      operationId: getBusinessSubscriptions
      summary: Get business subscriptions
      description: >
        This endpoint lets you access the subscription of a business.
        You need to have `READ` access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Business subscriptions
                properties:
                  presence_management:
                    $ref: '#/components/schemas/SubscriptionDetails'
                  review_management:
                    $ref: '#/components/schemas/SubscriptionDetails'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/additional_data:
    get:
      tags:
        - Businesses
      operationId: getBusinessAdditionalData
      summary: Get business additional data
      description: >
        This endpoint lets you access to the additional data of business.
        You need to have `READ`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Business additional data
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Businesses
      operationId: setBusinessAdditionalData
      summary: Set business additional data
      description: >
        This endpoint lets you set additional data on a business.
        You need to have `WRITE`access on this business.
        Additional is an flat object with at most 10 keys.
      parameters:
        - $ref: '#/components/parameters/business_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: A flat object (ie. without nested value) with at most 10 keys
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/BusinessId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/subscribe:
    post:
      summary: Subscribe a business
      description: >
        This endpoint lets you subscribe a business to one or several Partoo products.
        You need to have `WRITE` access on the business you want to subscribe.
        You need to have `PROVIDER` to be able to perform this action.
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_date:
                  type: number
                  description: Timestamp representing the date on which the subscription will start
                  example: 1540628702
                products:
                  type: array
                  description: List of products
                  items:
                    $ref: '#/components/schemas/Product'
                plan:
                  type: string
                  description: Any string that define your offer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_booster:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/unsubscribe:
    post:
      summary: Unsubscribe a business
      description: >
        This endpoint lets you unsubscribe a business from one or several Partoo products.
        You need to have `WRITE` access on the business you want to subscribe.
        You need to have `PROVIDER` to be able to perform this action.
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                canceling_date:
                  type: number
                  description: Timestamp representing the date on which the subscription will stop to be valid
                  example: 1540628702
                products:
                  type: array
                  description: List of products
                  items:
                    $ref: '#/components/schemas/Product'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_booster:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  # CATEGORY endpoints
  /category/search:
    get:
      summary: Search categories
      tags:
        - Categories
      description: >
        This endpoint lets you search through Partoo categories.
      operationId: searchCategories
      parameters:
        - $ref: '#/components/parameters/query_category_lang'
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      categories:
                        type: array
                        description: List of categories
                        items:
                          $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /category/{category_id}:
    get:
      summary: Get category
      tags:
        - Categories
      description: >
        This endpoint lets you retrieve the data of a specific category.
      operationId: getCategory
      parameters:
        - in: path
          required: true
          name: category_id
          schema:
            $ref: '#/components/schemas/CategoryId'
        - $ref: '#/components/parameters/query_category_lang'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'

  # PRESENCE ANALYTICS endpoints
  /presence_analytics:
    get:
      summary: Analytics
      description: |
        This endpoint lets you view the **Google My Business** analytics for all your businesses subscribed to
        **Presence Management**.
        The API allows you to select what data you're interested in, and how you want it aggregated (daily, monthly,
        by business, etc). You can also filter the results to limit it to a certain date range, and to certain business.

        Google My Business doesn't provide reliable data for the most recent 5 days.

        You can choose the analytics you want to get among:
        - queries: direct, indirect, branded or discovery
        - views: maps or search
        - actions: website, phone or driving directions

        You can use the following filters:
        - by businesses (businesses id in list or not in list)
        - by date (analytics before and/or after a date)
        - by business query. Will return matches for the business name, zipcode or city
        - by business city.

        The response can be aggregated by:
        - business id
        - by date: either by day, week, month or year
        - by both business id and date

        The response can be ordered in ascending or descending order by any of the selected dimensions or metrics.
        See examples for more details.

      operationId: getPresenceAnalytics
      tags:
        - Presence Analytics
      parameters:
        - $ref: '#/components/parameters/metrics'
        - $ref: '#/components/parameters/dimensions'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_business__notin'
        - $ref: '#/components/parameters/query_filter_by_city'
        - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
        - $ref: '#/components/parameters/query_analytics_date__gte'
        - $ref: '#/components/parameters/query_analytics_date__lte'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAnalyticsResponse'
              examples:
                metrics=queries_direct,queries_indirect, queries_discovery,queries_branded, views_maps,views_search, actions_website,actions_driving_directions, actions_phone:
                  value:
                    - queries_direct: 100
                      queries_branded: 111
                      queries_discrovery: 222
                      queries_indirect: 333
                      views_maps: 55
                      views_search: 8
                      actions_website: 0
                      actions_phone: 7
                      actions_driving_directions: 22
                dimensions=business & metrics=queries_direct:
                  value:
                    - queries_direct: 103
                      business_id: 59b2645db12ff60643ef832c
                    - queries_direct: 165
                      business_id: 60b2645fb12ff60643ef8344
                    - queries_direct: 28
                      business_id: 70b2645eb12ff60643ef833c
                dimensions=month & metrics=views_maps & order=views_maps__asc:
                  value:
                    - views_maps: 57
                      date: '2019-08-01'
                      bucket: month
                    - views_maps: 79
                      date: '2019-09-01'
                      bucket: month
                dimensions=day,business & metrics=queries_direct & order=day__desc:
                  value:
                  - queries_direct: 48
                    business_id: 59b2645db12ff60643ef832c
                    date: '2019-09-30'
                    bucket: day
                  - queries_direct: 6
                    business_id: 59b2645fb12ff60643ef8344
                    date: '2019-09-30'
                    bucket: day
                  - queries_direct: 11
                    business_id: 59b2645db12ff60643ef832c
                    date: '2019-09-29'
                    bucket: day
                  - queries_direct: 0
                    business_id: 59b2645fb12ff60643ef8344
                    date: '2019-09-29'
                    bucket: day
                  - queries_direct: 2
                    business_id: 59b2645db12ff60643ef832c
                    date: '2019-09-28'
                    bucket: day
                  - queries_direct: 66
                    business_id: 59b2645fb12ff60643ef8344
                    date: '2019-09-28'
                    bucket: day
                dimensions=week & metrics=queries_direct & filter_date__gte=2019-09-15 & filter_date__lte=2019-09-16:
                  value:
                    - queries_direct: 32
                      date: '2019-09-09'
                      bucket: week
                    - queries_direct: 164
                      date: '2019-09-16'
                      bucket: week
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /presence_analytics_export:
    get:
      summary: Export analytics
      description: |
        This endpoint let you export the analytics of your businesses.
        You need to choose an **email address** on which you will receive a mail to download the **Excel** file generated.
        To access the analytics of a business, you need to:
        - have `READ` access on it
        - have subscribed to **Presence Management** for this business.
        You can access the analytics from **Google My Business**.
        Data of the past 5 days are not available because they are not given by GMB.

        You will receive the following analytics:
        - queries: direct, indirect, branded or discovered
        - views: maps or search
        - actions: website, phone or driving direction

        You can use the following filters:
        - by businesses (businesses id in list or not in list)
        - by date (analytics before and/or after a date)
        - by query in business name, zipcode or city
        - by city.

        The response can be aggregated by:
        - business
        - by date: day, week, month or year
        - business and time

        The response can be ordered by:
        - business id
        - by date: day, week, month or year
        - metrics

        The parameters shall be used the same way than parameters of the endpoint 'Search for analytics'.
        Please refer to that endpoint for examples.

      operationId: exportPresenceAnalytics
      tags:
         - Presence Analytics
      parameters:
      - $ref: '#/components/parameters/export_email'
      - $ref: '#/components/parameters/dimensions'
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/query_business__in'
      - $ref: '#/components/parameters/query_business__notin'
      - $ref: '#/components/parameters/query_filter_by_city'
      - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
      - $ref: '#/components/parameters/query_analytics_date__gte'
      - $ref: '#/components/parameters/query_analytics_date__lte'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'

components:
  $ref: ./components/index.yml
security:
  - ApiKeyAuth: []
