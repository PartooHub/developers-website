openapi: "3.0.0"

info:
  title: Partoo Rest API
  version: "v2"
  x-logo:
    url: 'https://partoo-client-images.s3.amazonaws.com/logo-partoo-restapi-white.png'
  description: |
    # Getting started
    Here is the documentation on Partoo Rest API. It is maint for querying and updating data in Partoo database using `JSON` format.

    ## Purposes
    Partoo Rest API can be used for many differents purposes:
      - Retrieve data on businesses if you are a **publisher**
      - Manage your businesses/users if you are a **client**
      - Create/Subscribe/Manage organisations, users & businesses if you are a **reseller**
      - ...

    # Resources structure
    Partoo data is organised around 4 main resources:
    1. **Provider:** A provider represents the entity that signs the contract with the client using Partoo solution & products.
    An obvious example of provider is Partoo itself but a provider can also be a reseller of Partoo solutions.
    A provider owns `organisations`, `businesses` and `users`. If you are a Partoo reseller there will be a provider resource representing
    you inside Partoo app.
    2. **Organisation:** An organisation represents the legal entity, most likely a commercial company, that owns `businesses` (or listings).
    If you are a Partoo client there are one or several organisations representing your companies.
    An organisation belongs to a `provider`.
    3. **User:** A user can be a Partoo app user or Partoo API user.
    A user belongs to an `organisation` and has a `role` which gives him different levels of access on the different resources on Partoo (see section below).
    4. **Business:** A business represents a listing. It belongs to an `organisation`

    # Resources access

    ## Roles
    To use Partoo Rest API, you need an `api_key` (see authentication section). An `api_key` authenticates a user and each user has a `role`.

    A `role` defines for each resource (for instance `user`) a`READ` and/or `WRITE` access with the scope on which this access can be used.

    For instance a user with `BUSINESS_MANAGER` role has `WRITE` access on its own user and `READ` acces to all the users of its organisation.

    For now there are 4 roles available:
      - `PROVIDER` role is maint for reseller admin user. It can manage organisations, users and businesses of a provider
      - `ORG_ADMIN` role is maint for client admin user. It can manage the user and businesses of its organisation
      - `BUSINESS_MANAGER` role is maint for client business manager. It can manage several businesses
      - `PUBLISHER` role is maint for publisher wanting to use Partoo as a data source. It can read Partoo businesses subscribed to presence management product

    ## PROVIDER
    `PROVIDER` role is maint for reseller admin user. It can manage its provider organisations, users and businesses.

    ### Read access
    | Resource  |	Scope	   | Details                                           |
    | --------- | -------- | ------------------------------------------------- |
    | User	    | Provider | Can access the users that shares its provider     |
    | Organisation | Provider | Can access the organisations that shares its provider      |
    | Business	| Provider | Can access the businesses that share its provider |
    | Category	| All	     | Can access all categories                         |

    ### Write access
    | Resource     |	Scope	   | Details                                           |
    | ------------ | -------- | ------------------------------------------------- |
    | User	       | Provider | - Can create user, it will share its provider <br> - Can update user that shares its provider <br> - Can give role `ORG_ADMIN` and `BUSINESS_MANAGER` to user|
    | Organisation | Provider | - Can create organisation, it will share its provider <br> - Can update org that shares its provider      |
    | Business	   | Provider | - Can create business, they will share its provider (and its org_id if no org_id given) <br> - Can update businesses that shares its provider |
    | Category	   | not writable	    |                          |

    ## ORG_ADMIN
    `ORG_ADMIN` role is maint for client admin user. It can manage its organisation users and businesses.

    ### Read access
    | Resource  |	Scope	   | Details                                           |
    | --------- | -------- | ------------------------------------------------- |
    | User	    | Organisation | Can access the users that shares its org_id     |
    | Organisation | Organisation | Can access only its own org      |
    | Business	| Organisation | Can access the businesses that shares its org_id |
    | Category	| All	     | Can access all categories                         |

    ### Write access
    | Resource     |	Scope	   | Details                                           |
    | ------------ | -------- | ------------------------------------------------- |
    | User	       | Organisation | - Can create user, it will share its provider and its `org_id`. <br> - Can update user that shares its `org_id` <br> - Can only gives the role `BUSINESS_MANAGER` to its user|
    | Organisation | Organisation | - Can update itself <br> - Cannot create new org. |
    | Business	   | Organisation | - Can create business, it will share its provider and its `org_id` <br> - Can update businesses that shares its `org_id`|
    | Category	   | not writable |                          |

    ## BUSINESS_MANAGER
    `BUSINESS_MANAGER` role is maint for client business manager. It can manage several businesses.

    ### Read access
    | Resource  |	Scope	   | Details                                           |
    | --------- | -------- | ------------------------------------------------- |
    | User	    | Organisation | Can access the users that shares its org_id     |
    | Organisation | Organisation | Can access only its own org      |
    | Business	| Business | Can access the businesses that it has direct access to |
    | Category	| All	     | Can access all categories                         |

    ### Write access
    | Resource     |	Scope	   | Details                                           |
    | ------------ | -------- | ------------------------------------------------- |
    | User	       | User | - Can update its user only|
    | Organisation | No access |   |
    | Business	   | Business | - Can update businesses that it has direct access to <br> - Cannot create business |
    | Category	   | not writable |                          |

    ## PUBLISHER
    `PUBLISHER` role is maint for publisher wanting to use Partoo as a data source. It can read Partoo businesses subscribed to presence management product.

    ### Read access
    | Resource  |	Scope	   | Details                                           |
    | --------- | -------- | ------------------------------------------------- |
    | User	    | No access |        |
    | Organisation | All | Can access all Partoo organisations      |
    | Business	| Subscribed to Presence Management | Can access the businesses subscribed to presence management product |
    | Category	| All	     | Can access all categories                         |

    ### Write access
    **NO write access**

servers:
  - url: https://api.partoo.co/v2
    description: Production server
  - url: https://sandbox.api.partoo.co/v2
    description: Sandbox server (dev environment for clients & partners)

tags:
  - name: ApiKeys
    description: >
      In this section you will have all the operation to create/list/revoke api keys
      that can be used to authenticate user either on the REST API or on the JS API.
  - name: Organisations
    description: >
      All the operations you can perform on organisation.
      An organisation is an entreprise that owns businesses.
  - name: Businesses
    description: All the operations you can perform on businesses.
  - name: Users
    description: All operation available on users
  - name: Subscriptions
    description: >
      All the operation to subscribe/unsuscribe businesses to Partoo products.
      You need to have the role `PROVIDER` to be able to perform those operations.
  - name: Reviews
    description: All operation available on reviews
  - name: Categories
    description: All operation available on categories
  - name: Boosts
    description: All operation related to the Review Booster product
  - name: Presence Analytics
    description: All operation available on Presence Management analytics

paths:
  # BOOSTER endpoint
  /review_booster/send_invitation:
    post:
      tags:
        - Boosts
      summary: Send a review invitation
      description: >
        This endpoint lets you send a SMS to a costumer to help him leave a message on Google My Business.
        You need to have `WRITE` access on the business.
        Your business needs to be connected to a Google My Business location and to be subscribed to Review Booster product.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - business_id
                - target_phone
              properties:
                business_id:
                  $ref: '#/components/schemas/BusinessId'
                target_phone:
                  type: string
                  description: Customer phone number
                target_name:
                  type: string
                  description: Customer fullname
                  maxLength: 255
                template_id:
                  type: integer
                  description: Id of the SMS template you want to use
                force:
                  type: string
                  description: To force invitation sending when a SMS has already been sent to the customer
                  enum: ['True', "False"]
                  default: "False"

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation_id:
                    $ref: '#/components/schemas/InvitationId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /api/v2/review_booster/invitation_status:
    get:
      tags:
        - Boosts
      summary: Get the status of a review an invitation
      description: >
        This endpoint allows to get the status about an invitation sent through the Review Booster.
        Your access token must be for a user subscribed to the Review Booster.
        The invitation id must be for a business for which the user has access to.
      parameters:
        - in: query
          name: invitation_id
          schema:
            $ref: '#/components/schemas/InvitationId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  invitation_id:
                    $ref: '#/components/schemas/InvitationId'
                  status:
                    type: string
                    description: 'the current state of the SMS'
                    enum: ["CREATED", "SENT", "FAILED_SEND", "DELIVERED", "FAILED_DELIVERY"]
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
  /api/v2/review_booster/search-invitation:
    get:
      tags:
        - Boosts
      operationId: checkDuplicatedReviewInvitation
      summary: Search invitations matching a set of criteria
      description: >
          This endpoint allows to fetch previously sent invitations.
          Your access token must be for an user subscribed to the Review Booster product to access this route.
          The user must have access to the business.
          This can be useful to avoid sending multiple invitations to the same user in a defined period.
      parameters:
        - in: query
          name: business_id
          required: true
          schema:
            $ref: '#/components/schemas/BusinessId'
        - in: query
          name: target_phone
          required: true
          schema:
            $ref: '#/components/schemas/TargetPhone'
        - in: query
          name: after
          schema:
            type: timestamp
            example: 1559148288

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListResult'
                - type: object
                  properties:
                    review_invitations:
                      type: array
                      description: List of invitations sent
                      items:
                        type: object
                        properties:
                          user_name:
                            type: string
                            example: Perceval
                          user_id:
                            type: string
                            example: 54b6733b9826bf1dd29af128
                          id:
                            type: string
                            example: "3d90efec-0d7f-4960-98c0-951d58dc14cb"
                          sent-time:
                            type: string
                            example: "2019-06-06 11:57:27.274725+00:00"
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'

  # USER endpoints
  /user/me:
    get:
      tags:
        - Users
      summary: Get my user
      description: This endpoint lets you retrieve all the information about your user
      operationId: getMyUser
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/401'
  /user:
    post:
      tags:
        - Users
      summary: Create user
      description: >
        This endpoint lets you create a user.
        You need to have `WRITE` access on the organisation of the user you want to create.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to create a user
              type: object
              required:
                - email
                - first_name
                - last_name
              properties:
                email:
                  description: User email (must be unique will return otherwise)
                  type: string
                  format: email
                first_name:
                  $ref: '#/components/schemas/UserFirstName'
                last_name:
                  $ref: '#/components/schemas/UserLastName'
                org_id:
                  description: >
                    Id of the organisation to which the user should belong.
                    If no `org_id` given, the user will have the same organisation as you.
                  type: integer
                business_ids:
                  description: >
                    The list of business to which the user has access to.
                    Will be taken into account only if user has `BUSINESS_MANAGER` role.
                  type: array
                  items:
                    type: string
                phone:
                  $ref: '#/components/schemas/UserPhone'
                role:
                  $ref: '#/components/schemas/Role'
                sidebar_products:
                  type: array
                  items:
                    $ref: '#/components/schemas/Product'
                send_invitation:
                  description: Send an invitation email to the User
                  type: string
                  enum: ["True", "False"]
                  default: "False"
                password:
                  description: >
                    The User password.
                    If no password given, a password will automatically be generated.
                    Will be ignored if `send_invitation` is set to `True`.
                  type: string
                  minLength: 6
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/UserId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /user/{user_id}:
    get:
      tags:
        - Users
      summary: Get user
      description: >
        This endpoint lets you retrieve all the information on a user.
        You need to have `READ` access to this users.
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Users
      summary: Update user
      description: >
        This endpoint lets you update a user.
        You need to have `WRITE` access to this user.
        It has a patch behaviour which means that only indicated value will be changed.
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to update a user.
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/UserEmail'
                first_name:
                  $ref: '#/components/schemas/UserFirstName'
                last_name:
                  $ref: '#/components/schemas/UserLastName'
                org_id:
                  description: Org to which the user should belong
                  type: integer
                business_ids:
                  description: >
                    The list of business to which the user has access to.
                    Will be taken into account only if user has `BUSINESS_MANAGER` role.
                  type: array
                  items:
                    type: string
                phone:
                  $ref: '#/components/schemas/UserPhone'
                role:
                  $ref: '#/components/schemas/Role'
                sidebar_products:
                  type: array
                  items:
                    $ref: '#/components/schemas/Product'
                password:
                  description: User password
                  type: string
                  minLength: 6
                keywords:
                  $ref: '#/components/schemas/Keywords'
                review_management_weekly:
                  description: The parameter decides if the user subscribes the report of "Review Management weekly"
                  type: boolean
                review_management_monthly:
                  description: The parameter decides if the user subscribes the report of "Review Management monthly"
                  type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/UserId'
                  status:
                    type: string
                    enum: ["success"]
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    delete:
      summary: Delete user
      description: >
        This endpoint lets you delete a user.
        You need to have `WRITE` access to this user.
      tags:
        - Users
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/UserId'
                  status:
                    type: string
                    enum: ["success"]
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /user/search:
    get:
      tags:
        - Users
      summary: Search for users
      description: This endpoint lets you search for users using filters
      operationId: searchUser
      parameters:
        - in: query
          name: email
          schema:
            type: string
            format: email
          description: Filter by email
          required: false
        - in: query
          name: org_id
          schema:
            type: integer
          description: Filter by org id
        - in: query
          name: query
          schema:
            type: string
          description: To perform a fuzzy search on user
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/UserStatus'
          description: Filter users by status
        - in: query
          name: display_business_ids
          schema:
            type: string
            enum: ["True", "False"]
            default: "True"
          description: The endpoint won’t return the `business_ids` when the value is `False`
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: Page number. 30 results per page
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      users:
                        type: array
                        description: List of users
                        items:
                          $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /user/search/count:
    get:
      tags:
        - Users
      summary: Count users
      description: >
        This endpoint lets you count the users you have `READ` access to.
        You can apply filters on this request.
      operationId: searchUserCount
      parameters:
        - $ref: '#/components/parameters/query_filter_by_email'
        - $ref: '#/components/parameters/query_filter_by_org_id'
        - $ref: '#/components/parameters/query_filter_by_user_status'
        - in: query
          name: query
          schema:
            type: string
          description: To perform a fuzzy search on user
        - in: query
          name: display_business_ids
          schema:
            type: string
            enum: ["True", "False"]
            default: "True"
          description: The endpoint won’t return the `business_ids` when the value is `False`
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/count'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /user/{user_id}/invite:
    post:
      tags:
        - Users
      summary: Re-invite user
      description: >
        This endpoint lets you trigger a new invitation email to an `invited` user.
        You need to have `WRITE` access to this user.
        The email can only be sent once every 5 minutes.
      operationId: reinviteUser
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /api/v2/user/{user_id}/businesses:
    get:
      tags:
      - Users
      summary: Get user businesses
      description: >
        This endpoint lets you retrieve the list of businesses which the selected user has `READ` access to.
      operationId: getUserBusinesses
      parameters:
        - $ref: '#/components/parameters/path_user_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      businesses:
                        description: User businesses
                        type: array
                        items:
                          $ref: '#/components/schemas/Business'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  /authorize:
    post:
      tags:
        - ApiKeys
      summary: Generate API key
      description: >
        This endpoint lets you generate an API key either permanent (ie. will work until revoked)
        or consumable (ie. will work only for one connection).
        If you are generating the API key to log your user in the JS API, it is preferable to generate consumable api key.
      operationId: generateAPIKey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  $ref: '#/components/schemas/UserId'
                consumable:
                  type: string
                  default: "False"
                  enum: ["True, False"]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserId'
                  user_authorization_token:
                    description: New API key
                    type: string
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /authorize/list:
    get:
      summary: List user API keys
      description: >
        This endpoint let you list all the current valid tokens for a given user.
        You need to have `READ` access to this user.
      operationId: listAPIKeys
      tags:
        - ApiKeys
      parameters:
        - in: query
          name: user_id
          schema:
            $ref: '#/components/schemas/UserId'
          description: User id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserId'
                  user_authorization_tokens:
                    type: array
                    items:
                      type: string
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /authorize/revoke:
    post:
      summary: Revoke API key
      description: This endpoint let you revoke an API key of one of your user.
      operationId: revokeAPIKey
      tags:
        - ApiKeys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_authorization_token
                - user_id
              properties:
                user_authorization_token:
                  type: string
                  description: The API key you want to revoke
                user_id:
                  $ref: '#/components/schemas/UserId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    $ref: '#/components/schemas/UserId'
                  user_authorization_tokens:
                    type: array
                    items:
                      type: string
                    description: Remaining valid API keys
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  # REVIEWS endpoints
  /reviews:
    get:
      summary: Search for reviews
      description: >
        This endpoint let you search for the reviews of your businesses.
        To access the reviews of a business you need to have `READ` access on it.
        You can access reviews from **Google My Business**, **Facebook** & **Foursquare**.
        The response is paginated (30 results per page).
      operationId: searchReviews
      tags:
        - Reviews
      parameters:
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_business__notin'
        - $ref: '#/components/parameters/query_content__isnull'
        - $ref: '#/components/parameters/query_review_update_date__gte'
        - $ref: '#/components/parameters/query_review_update_date__lte'
        - $ref: '#/components/parameters/query_review_rating__in'
        - $ref: '#/components/parameters/query_review_state'
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      reviews:
                        description: Filtered reviews
                        type: array
                        items:
                          $ref: '#/components/schemas/Review'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /reviews/qualitative-evolution:
    get:
      tags:
        - Reviews
      summary: Qualitative evolution
      description: Get the average note in a specific time range
      parameters:
        - $ref: '#/components/parameters/query_review_bucket'
        - $ref: '#/components/parameters/query_review_cumulative'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      ReviewQualitativeEvaluation:
                        description: Qualitative evaluation of the review from the server
                        type: object
                        properties:
                          date:
                            type: string
                            format: datetime
                            example: '2019-11-29'
                          added:
                            type: number
                            format: integer
                            example: 50
                          average:
                            type: number
                            format: float
                            example: 4.54
                          cum_sum:
                            type: number
                            format: float
                            example: 50.0
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/quantitative-evolution:
    get:
      tags:
      - Reviews
      summary: Quantitative evolution
      description: Get the sum note in a specific time range
      parameters:
      - $ref: '#/components/parameters/query_review_bucket'
      - $ref: '#/components/parameters/query_review_update_date__gte'
      - $ref: '#/components/parameters/query_review_update_date__lte'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    ReviewQualitativeEvaluation:
                      type: object
                      properties:
                        date:
                          type: string
                          format: string
                          example: '2019-11-29'
                        added:
                          type: number
                          format: integer
                          example: 50
                        previous_sum:
                          type: number
                          format: float
                          example: 0
                        cum_sum:
                          type: number
                          format: float
                          example: 50
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/{review_id}/reply/edit:
    post:
      tags:
      - Reviews
      summary: Post or Edit a Reply to a review
      description: This endpoint lets you reply or edit your reply to a review.
      operationId: ReplyToReview
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            $ref: '#/components/schemas/ReviewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body to post/edit a reply
              type: object
              required:
                - state
              properties:
                  content:
                    description: Content of your Reply
                    type: string
                    format: text
                  state:
                    description: State of the review
                    type: string
                    enum: ["treated", "not_treated"]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/{review_id}/reply/delete:
    delete:
      tags:
        - Reviews
      summary: Delete the reply to a review
      description: >
        This endpoint lets you delete the reply to a review
      parameters:
        - in: path
          name: review_id
          required: true
          schema:
            $ref: '#/components/schemas/ReviewId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /reviews/keywords-count:
    post:
      tags:
      - Reviews
      operationId: keywordsCount
      summary: Get review count by keyword
      description: >
        This endpoint lets you access your review counts by keyword.
        You need to have `READ` access on the review's business.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - keywords
              properties:
                keywords:
                  description: Array of keywords (cannot contain empty strings, strings are trimmed and put to lowercase)
                  type: array
                  maxItems: 12
                  minItems: 1
                  items:
                    type: string
      responses:
        200:
          description: Array of keyword data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    keyword:
                      type: string
                      minLength: 1
                    count:
                      type: number
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  # ORG endpoints
  /org/{org_id}:
    get:
      tags:
        - Organisations
      summary: Get organisation
      description: >
        This endpoint lets you retrieve all the detail about a specific organisation.
        You need to have `READ` access to this organisation.
      parameters:
        - $ref: '#/components/parameters/path_org_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Organisations
      summary: Update organisation
      description: >
        This endpoint lets you update the information of an organisation.
        You need to have `WRITE` access on the organisation.
      parameters:
        - $ref: '#/components/parameters/path_org_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The object to send to update an organisation
              properties:
                name:
                  $ref: '#/components/schemas/OrgName'
                alias:
                  $ref: '#/components/schemas/OrgAlias'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  org_id:
                    $ref: '#/components/schemas/OrgId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Organisations
      summary: Delete organisation
      description: >
        This endpoint lets you delete an organisation.
        You need to have `WRITE` access on your provider.
        When an organisation gets deleted all the resources linked to it are deleted (users and businesses).
        If the organisation still has businesses or users,
        it would raise an error if you do not indicate `force="True"` in the JSON body.
      parameters:
        - $ref: '#/components/parameters/path_org_id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                force:
                  description: Force the deletion of organisation even if there are still users and business linked to it
                  type: string
                  enum:
                    - "True"
                    - "False"
                  default: "False"
      responses:
        200:
          description: OK
          content:
              application/json:
                schema:
                  type: object
                  description: Response object
                  properties:
                    status:
                      $ref: '#/components/schemas/RequestStatus'
                    org_id:
                      $ref: '#/components/schemas/OrgId'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /org/search:
    get:
      tags:
        - Organisations
      summary: Search for organisations
      description: >
        This endpoint lets you search for organisations using filters.
        The response is paginated (30 results per page).
      parameters:
        - $ref: '#/components/parameters/query_org_id'
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object return by the API
                properties:
                  page:
                    $ref: '#/components/schemas/current_page'
                  max_page:
                    $ref: '#/components/schemas/max_page'
                  count:
                    $ref: '#/components/schemas/count'
                  orgs:
                    type: array
                    description: The organisations complying with filter (30 max per page)
                    items:
                      $ref: '#/components/schemas/Org'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /org:
    post:
      tags:
        - Organisations
      summary: Create organisation
      description: >
        This endpoint lets you create an organisation.
        You have `WRITE` access on your provider (ie. only possible if you have `PROVIDER` role).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: JSON to create an organisation
              required:
                - name
              properties:
                name:
                  $ref: '#/components/schemas/OrgName'
                alias:
                  $ref: '#/components/schemas/OrgAlias'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Result object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
                  org_id:
                    $ref: '#/components/schemas/OrgId'
                  alias:
                    $ref: '#/components/schemas/OrgAlias'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'

  # BUSINESS endpoints
  /business/search:
    get:
      operationId: searchBusinesses
      tags:
        - Businesses
      summary: Search for businesses
      description: >
        This lets you search among the businesses you have `READ` access to. You can use several filters.
        The response is paginated (30 results per page).
      parameters:
        - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
        - $ref: '#/components/parameters/query_filter_by_org_id'
        - $ref: '#/components/parameters/query_filter_by_country'
        - $ref: '#/components/parameters/query_filter_by_business_name'
        - $ref: '#/components/parameters/query_filter_by_business_status'
        - $ref: '#/components/parameters/query_filter_by_zipcode'
        - $ref: '#/components/parameters/query_filter_by_city'
        - $ref: '#/components/parameters/query_filter_by_business_code'
        - $ref: '#/components/parameters/query_filter_by_business_modification_timestamp'
        - $ref: '#/components/parameters/query_filter_by_business_subscription_to_review_management'
        - $ref: '#/components/parameters/query_filter_by_business_subscription_to_presence_management'
        - $ref: '#/components/parameters/query_filter_by_business_promo'
        - $ref: '#/components/parameters/query_filter_by_business_code'
        - $ref: '#/components/parameters/query_page'
        - in: query
          name: connected_to_gmb_location
          schema:
            type: string
            enum:
              - "True"
              - "False"
          required: false
          description: Filter by current link to a GMB location
        - in: query
          name: connected_to_facebook_location
          schema:
            type: string
            enum:
              - "True"
              - "False"
          required: false
          description: Filter by current link to a Facebook location
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      businesses:
                        type: array
                        description: List of Businesses
                        items:
                          $ref: '#/components/schemas/Business'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /business:
    post:
      tags:
        - Businesses
      summary: Create business
      operationId: createBusiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              required:
                - name
                - country
                - zipcode
                - city
                - categories
              properties:
                name:
                  $ref: '#/components/schemas/BusinessName'
                org_id:
                  $ref: '#/components/schemas/BusinessOrgId'
                country:
                  $ref: '#/components/schemas/BusinessCountry'
                zipcode:
                  $ref: '#/components/schemas/BusinessZipcode'
                city:
                  $ref: '#/components/schemas/BusinessCity'
                region:
                  $ref: '#/components/schemas/BusinessRegion'
                categories:
                  description: Array of categories ids
                  type: array
                  minItems: 1
                  items:
                    type: string
                code:
                  $ref: '#/components/schemas/BusinessCode'
                status:
                  $ref: '#/components/schemas/BusinessStatus'
                address_details:
                  $ref: '#/components/schemas/AddressDetails'
                address2:
                  type: string
                lat:
                  $ref: '#/components/schemas/Latitude'
                long:
                  $ref: '#/components/schemas/Longitude'
                website_url:
                  $ref: '#/components/schemas/BusinessWebsite'
                facebook_url:
                  $ref: '#/components/schemas/BusinessFacebookPage'
                twitter_url:
                  $ref: '#/components/schemas/BusinessTwitter'
                description_short:
                  $ref: '#/components/schemas/BusinessShortDescription'
                description_long:
                  $ref: '#/components/schemas/BusinessLongDescription'
                open_hours:
                  $ref: '#/components/schemas/OpenHours'
                specific_hours:
                  $ref: '#/components/schemas/SpecificHours'
                contacts:
                  $ref: '#/components/schemas/BusinessContacts'
                photos:
                  $ref: '#/components/schemas/Photos'
                national_identification_number:
                  $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
                videos:
                  $ref: '#/components/schemas/BusinessVideos'
                news:
                  $ref: '#/components/schemas/BusinessNews'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/RequestStatus'
                  id:
                    $ref: '#/components/schemas/BusinessId'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /business/connections_stats:
    get:
      tags:
        - Businesses
      operationId: getBusinessConnectionsStats
      summary: Get statistics about connected businesses
      description: >
        This endpoint lets you access the number of businesses connected to Google My Business and Facebook.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: >
                      Total number of businesses.
                  linked_to_gmb_count:
                    type: integer
                    description: >
                      Number of businesses linked to Google My Business.
                  linked_to_facebook_count:
                    type: integer
                    description: >
                      Number of businesses linked to Facebook.
        401:
          $ref: '#/components/responses/401'
  /business/{business_id}:
    get:
      tags:
        - Businesses
      operationId: getBusiness
      summary: Get business
      description: >
        This endpoint lets you access to the information of a business.
        You need to have `READ`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Businesses
      operationId: updateBusiness
      summary: Update business
      description: >
        This endpoint lets you access to the information of a business.
        You need to have `WRITE` access on this business.
        Only indicated values be taken into account (it works like a `PATCH`).
      parameters:
        - $ref: '#/components/parameters/business_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request object
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/BusinessName'
                org_id:
                  $ref: '#/components/schemas/BusinessOrgId'
                country:
                  $ref: '#/components/schemas/BusinessCountry'
                zipcode:
                  $ref: '#/components/schemas/BusinessZipcode'
                city:
                  $ref: '#/components/schemas/BusinessCity'
                region:
                  $ref: '#/components/schemas/BusinessRegion'
                categories:
                  description: Array of categories ids
                  type: array
                  minItems: 1
                  items:
                    type: string
                code:
                  $ref: '#/components/schemas/BusinessCode'
                status:
                  $ref: '#/components/schemas/BusinessStatus'
                address_details:
                  $ref: '#/components/schemas/AddressDetails'
                address2:
                  description: Row address string
                  type: string
                lat:
                  $ref: '#/components/schemas/Latitude'
                long:
                  $ref: '#/components/schemas/Longitude'
                website_url:
                  $ref: '#/components/schemas/BusinessWebsite'
                facebook_url:
                  $ref: '#/components/schemas/BusinessFacebookPage'
                twitter_url:
                  $ref: '#/components/schemas/BusinessTwitter'
                description_short:
                  $ref: '#/components/schemas/BusinessShortDescription'
                description_long:
                  $ref: '#/components/schemas/BusinessLongDescription'
                open_hours:
                  $ref: '#/components/schemas/OpenHours'
                specific_hours:
                  $ref: '#/components/schemas/SpecificHours'
                contacts:
                  $ref: '#/components/schemas/BusinessContacts'
                photos:
                  $ref: '#/components/schemas/Photos'
                national_identification_number:
                  $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
                videos:
                  $ref: '#/components/schemas/BusinessVideos'
                news:
                  $ref: '#/components/schemas/BusinessNews'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    delete:
      tags:
        - Businesses
      operationId: deleteBusiness
      summary: Delete business
      description: >
        This endpoint lets you delete a business.
        You need to have `WRITE`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                description: Response object
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/BusinessId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/partner_urls:
    get:
      tags:
        - Businesses
      operationId: getBusinessPartnerUrls
      summary: Get business urls on publishers
      description: >
        This endpoint lets you access to the urls corresponding to the business on publisher websites.
        You need to have `READ` access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: URL by publisher
                properties:
                  apple:
                    type: string
                    format: uri
                  le118000:
                    type: string
                    format: uri
                  les_horaires:
                    type: string
                    format: uri
                  wemap:
                    type: string
                    format: uri
                  here:
                    type: string
                    format: uri
                  google_my_business:
                    type: string
                    format: uri
                  hoodspot:
                    type: string
                    format: uri
                  foursquare:
                    type: string
                    format: uri
                  facebook:
                    type: string
                    format: uri
                  justacote:
                    type: string
                    format: uri
                  navmii:
                    type: string
                    format: uri
                  bing_fr:
                    type: string
                    format: uri
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/integration_status:
    get:
      tags:
        - Businesses
      operationId: getBusinessIntegrationStatus
      summary: Get business integration data
      description: >
        This endpoint lets you access to the data summarizing the integration state of a business on publishers.
        You need to have `READ` access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: URL by publisher
                properties:
                  apple:
                    $ref: '#/components/schemas/IntegrationData'
                  le118000:
                    $ref: '#/components/schemas/IntegrationData'
                  les_horaires:
                    $ref: '#/components/schemas/IntegrationData'
                  wemap:
                    $ref: '#/components/schemas/IntegrationData'
                  here:
                    $ref: '#/components/schemas/IntegrationData'
                  google_my_business:
                    $ref: '#/components/schemas/IntegrationData'
                  hoodspot:
                    $ref: '#/components/schemas/IntegrationData'
                  foursquare:
                    $ref: '#/components/schemas/IntegrationData'
                  facebook:
                    $ref: '#/components/schemas/IntegrationData'
                  justacote:
                    $ref: '#/components/schemas/IntegrationData'
                  navmii:
                    $ref: '#/components/schemas/IntegrationData'
                  bing_fr:
                    $ref: '#/components/schemas/IntegrationData'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/subscription:
    get:
      tags:
        - Businesses
      operationId: getBusinessSubscriptions
      summary: Get business subscriptions
      description: >
        This endpoint lets you access the subscription of a business.
        You need to have `READ` access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Business subscriptions
                properties:
                  presence_management:
                    $ref: '#/components/schemas/SubscriptionDetails'
                  review_management:
                    $ref: '#/components/schemas/SubscriptionDetails'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/additional_data:
    get:
      tags:
        - Businesses
      operationId: getBusinessAdditionalData
      summary: Get business additional data
      description: >
        This endpoint lets you access to the additional data of business.
        You need to have `READ`access on this business.
      parameters:
        - $ref: '#/components/parameters/business_id'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Business additional data
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
    post:
      tags:
        - Businesses
      operationId: setBusinessAdditionalData
      summary: Set business additional data
      description: >
        This endpoint lets you set additional data on a business.
        You need to have `WRITE`access on this business.
        Additional is an flat object with at most 10 keys.
      parameters:
        - $ref: '#/components/parameters/business_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: A flat object (ie. without nested value) with at most 10 keys
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/BusinessId'
                  status:
                    $ref: '#/components/schemas/RequestStatus'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/subscribe:
    post:
      summary: Subscribe a business
      description: >
        This endpoint lets you subscribe a business to one or several Partoo products.
        You need to have `WRITE` access on the business you want to subscribe.
        You need to have `PROVIDER` to be able to perform this action.
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscription_date:
                  type: number
                  description: Timestamp representing the date on which the subscription will start
                  example: 1540628702
                products:
                  type: array
                  description: List of products
                  items:
                    $ref: '#/components/schemas/Product'
                plan:
                  type: string
                  description: Any string that define your offer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_booster:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'
  /business/{business_id}/unsubscribe:
    post:
      summary: Unsubscribe a business
      description: >
        This endpoint lets you unsubscribe a business from one or several Partoo products.
        You need to have `WRITE` access on the business you want to subscribe.
        You need to have `PROVIDER` to be able to perform this action.
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                canceling_date:
                  type: number
                  description: Timestamp representing the date on which the subscription will stop to be valid
                  example: 1540628702
                products:
                  type: array
                  description: List of products
                  items:
                    $ref: '#/components/schemas/Product'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  presence_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_management:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
                  review_booster:
                    oneOf:
                      - $ref: '#/components/schemas/ProductSubscribeResponseObject'
                      - $ref: '#/components/schemas/ProductUnsubscribeResponseObject'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        404:
          $ref: '#/components/responses/404'

  # CATEGORY endpoints
  /category/search:
    get:
      summary: Search categories
      tags:
        - Categories
      description: >
        This endpoint lets you search through Partoo categories.
      operationId: searchCategories
      parameters:
        - $ref: '#/components/parameters/query_category_lang'
        - $ref: '#/components/parameters/query_page'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResult'
                  - type: object
                    properties:
                      categories:
                        type: array
                        description: List of categories
                        items:
                          $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
  /category/{category_id}:
    get:
      summary: Get category
      tags:
        - Categories
      description: >
        This endpoint lets you retrieve the data of a specific category.
      operationId: getCategory
      parameters:
        - in: path
          required: true
          name: category_id
          schema:
            $ref: '#/components/schemas/CategoryId'
        - $ref: '#/components/parameters/query_category_lang'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'

  # PRESENCE ANALYTICS endpoints
  /presence_analytics:
    get:
      summary: Analytics
      description: |
        This endpoint lets you view the **Google My Business** analytics for all your businesses subscribed to
        **Presence Management**.
        The API allows you to select what data you're interested in, and how you want it aggregated (daily, monthly,
        by business, etc). You can also filter the results to limit it to a certain date range, and to certain business.

        Google My Business doesn't provide reliable data for the most recent 5 days.

        You can choose the analytics you want to get among:
        - queries: direct, indirect, branded or discovery
        - views: maps or search
        - actions: website, phone or driving directions

        You can use the following filters:
        - by businesses (businesses id in list or not in list)
        - by date (analytics before and/or after a date)
        - by business query. Will return matches for the business name, zipcode or city
        - by business city.

        The response can be aggregated by:
        - business id
        - by date: either by day, week, month or year
        - by both business id and date

        The response can be ordered in ascending or descending order by any of the selected dimensions or metrics.
        See examples for more details.

      operationId: getPresenceAnalytics
      tags:
        - Presence Analytics
      parameters:
        - $ref: '#/components/parameters/metrics'
        - $ref: '#/components/parameters/dimensions'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/query_business__in'
        - $ref: '#/components/parameters/query_business__notin'
        - $ref: '#/components/parameters/query_filter_by_city'
        - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
        - $ref: '#/components/parameters/query_analytics_date__gte'
        - $ref: '#/components/parameters/query_analytics_date__lte'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAnalyticsResponse'
              examples:
                metrics=queries_direct,queries_indirect, queries_discovery,queries_branded, views_maps,views_search, actions_website,actions_driving_directions, actions_phone:
                  value:
                    - queries_direct: 100
                      queries_branded: 111
                      queries_discrovery: 222
                      queries_indirect: 333
                      views_maps: 55
                      views_search: 8
                      actions_website: 0
                      actions_phone: 7
                      actions_driving_directions: 22
                dimensions=business & metrics=queries_direct:
                  value:
                    - queries_direct: 103
                      business_id: 59b2645db12ff60643ef832c
                    - queries_direct: 165
                      business_id: 60b2645fb12ff60643ef8344
                    - queries_direct: 28
                      business_id: 70b2645eb12ff60643ef833c
                dimensions=month & metrics=views_maps & order=views_maps__asc:
                  value:
                    - views_maps: 57
                      date: '2019-08-01'
                      bucket: month
                    - views_maps: 79
                      date: '2019-09-01'
                      bucket: month
                dimensions=day,business & metrics=queries_direct & order=day__desc:
                  value:
                  - queries_direct: 48
                    business_id: 59b2645db12ff60643ef832c
                    date: '2019-09-30'
                    bucket: day
                  - queries_direct: 6
                    business_id: 59b2645fb12ff60643ef8344
                    date: '2019-09-30'
                    bucket: day
                  - queries_direct: 11
                    business_id: 59b2645db12ff60643ef832c
                    date: '2019-09-29'
                    bucket: day
                  - queries_direct: 0
                    business_id: 59b2645fb12ff60643ef8344
                    date: '2019-09-29'
                    bucket: day
                  - queries_direct: 2
                    business_id: 59b2645db12ff60643ef832c
                    date: '2019-09-28'
                    bucket: day
                  - queries_direct: 66
                    business_id: 59b2645fb12ff60643ef8344
                    date: '2019-09-28'
                    bucket: day
                dimensions=week & metrics=queries_direct & filter_date__gte=2019-09-15 & filter_date__lte=2019-09-16:
                  value:
                    - queries_direct: 32
                      date: '2019-09-09'
                      bucket: week
                    - queries_direct: 164
                      date: '2019-09-16'
                      bucket: week
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
  /presence_analytics_export:
    get:
      summary: Export analytics
      description: |
        This endpoint let you export the analytics of your businesses.
        You need to choose an **email address** on which you will receive a mail to download the **Excel** file generated.
        To access the analytics of a business, you need to:
        - have `READ` access on it
        - have subscribed to **Presence Management** for this business.
        You can access the analytics from **Google My Business**.
        Data of the past 5 days are not available because they are not given by GMB.

        You will receive the following analytics:
        - queries: direct, indirect, branded or discovered
        - views: maps or search
        - actions: website, phone or driving direction

        You can use the following filters:
        - by businesses (businesses id in list or not in list)
        - by date (analytics before and/or after a date)
        - by query in business name, zipcode or city
        - by city.

        The response can be aggregated by:
        - business
        - by date: day, week, month or year
        - business and time

        The response can be ordered by:
        - business id
        - by date: day, week, month or year
        - metrics

        The parameters shall be used the same way than parameters of the endpoint 'Search for analytics'.
        Please refer to that endpoint for examples.

      operationId: exportPresenceAnalytics
      tags:
         - Presence Analytics
      parameters:
      - $ref: '#/components/parameters/export_email'
      - $ref: '#/components/parameters/dimensions'
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/query_business__in'
      - $ref: '#/components/parameters/query_business__notin'
      - $ref: '#/components/parameters/query_filter_by_city'
      - $ref: '#/components/parameters/query_filter_by_fuzzy_query_on_business'
      - $ref: '#/components/parameters/query_analytics_date__gte'
      - $ref: '#/components/parameters/query_analytics_date__lte'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'

components:
  securitySchemes:
    ApiKeyAuth:
      description: >
        The authentication system on Partoo API is using `api_key` param.
        An api_key is linked to a user. This user's role will give you different access level to the API features.
      type: apiKey
      in: query
      name: api_key
  schemas:
    BaseAnalyticsResponse:
      type: array
      items:
        type: object
        properties:
          queries_direct:
            $ref: '#/components/schemas/QueriesDirect'
          queries_branded:
            $ref: '#/components/schemas/QueriesBranded'
          queries_discovery:
            $ref: '#/components/schemas/QueriesDiscovery'
          queries_indirect:
            $ref: '#/components/schemas/QueriesIndirect'
          views_maps:
            $ref: '#/components/schemas/ViewsMaps'
          views_search:
            $ref: '#/components/schemas/ViewsSearch'
          actions_website:
            $ref: '#/components/schemas/ActionsWebsite'
          actions_phone:
            $ref: '#/components/schemas/ActionsPhone'
          actions_driving_directions:
            $ref: '#/components/schemas/ActionsDrivingDirections'
          date:
            $ref: '#/components/schemas/AnalyticsDate'
          bucket:
            $ref: '#/components/schemas/AnalyticsBucket'
    QueriesDirect:
      type: number
      example: 100
      description: Customers who find your listing searching for your business name or address
    QueriesBranded:
      type: number
      example: 111
      description: Customers who find your listing searching for a brand related to your business
    QueriesDiscovery:
      type: number
      example: 222
      description: Customers who find your listing searching for a category, product or service
    QueriesIndirect:
      type: number
      example: 333
      description: Sum of the queries branded and discovery
    ViewsMaps:
      type: number
      example: 55
      description: Customers who view your listing on Google Maps
    ViewsSearch:
      type: number
      example: 8
      description: Customers who view your listing on Google Search
    ActionsWebsite:
      type: number
      description: Customers who click on your website link
    ActionsPhone:
      type: number
      description: Customers who call your business
    ActionsDrivingDirections:
      type: number
      description: Customers who request directions to your business
    AnalyticsDate:
      type: datetime
      description: First day of the aggregation
      example: '2019-11-05'
    AnalyticsBucket:
      type: string
      description: Time aggregation requested
      example: 'day'
    ListResult:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/current_page'
        max_page:
          $ref: '#/components/schemas/max_page'
        count:
          $ref: '#/components/schemas/count'
    CategoryLang:
      type: string
      description: Category language
      enum: ['fr', 'es', 'it', 'en', 'de']
    CategoryName:
      type: string
      description: Category name in given language
      example: Cabinet d'expertise comptable
    CategoryId:
      type: string
      description: Category id
      example: 5109c3a237zdc544d8e267378
    Category:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CategoryName'
        id:
          $ref: '#/components/schemas/CategoryId'
    ProductSubscribeResponseObject:
      type: object
      properties:
        subscription_date:
          type: number
          description: Date on which the subscription was activated
          example: 1540628702
        status:
          type: string
          enum:
            - active
    ProductUnsubscribeResponseObject:
      type: object
      properties:
        canceling_date:
          type: number
          description: Date on which the subscription was canceled
          example: 1540628702
        status:
          type: string
          enum:
            - inactive
    current_page:
      type: integer
      description: Current page number
      example: 1
    max_page:
      type: integer
      description: Last page number
      example: 10
    count:
      type: integer
      description: Number of resources compliying with filters
      example: 287
    TimeWindow:
      description: Time window
      type: string
      pattern: '^([0-1][0-9]|2[0-3]):([0-5][0-9])\-([0-1][0-9]|2[0-3]):([0-5][0-9])$'
      example: 10:00-14:00
    Day:
      description: Open hours (for instance `[10:00-14:00, 16:00-18:00]`)
      type: array
      items:
        $ref: '#/components/schemas/TimeWindow'
      example: ['10:00-14:00']
    Role:
      description: User role in the application
      type: string
      enum:
        - BUSINESS_MANAGER
        - ORG_ADMIN
        - PROVIDER
        - PUBLISHER
      example: BUSINESS_MANAGER
    Lang:
      description: Available language in the application
      type: string
      enum:
        - fr
        - en
        - es
        - it
      example: fr
    UserStatus:
      description: User status in the application
      type: string
      enum:
        - active
        - invited
      example: active
    Product:
      description: Available products
      type: string
      enum:
        - presence_management
        - review_booster
        - review_management
      example: presence_management
    Subscriptions:
      description: Business subscriptions
      type: object
      required:
        - presence_management
        - review_booster
        - review_management
      properties:
        presence_management:
          type: boolean
          description: Is business subscribed to Presence Management
        review_management:
          type: boolean
          description: Is business subscribed to Review Management
        review_booster:
          type: boolean
          description: Is business subscribed to Review Booster
      example:
        presence_management: true
        review_management: true
        review_booster: false
    ReviewId:
      type: integer
      description: Review id
      example: 34
    CommentId:
      type: integer
      description: Comment id
      example: 666
    ReviewPublisherLabel:
      type: string
      description: Publisher label
      enum:
        - google_my_business
        - facebook
        - foursquare
    ReviewPublisherId:
      type: string
      description: Review id on publisher
      example: accounts/114063712393225091258/locations/74805271119400652054
    ReviewAuthorName:
      type: string
      description: Author name
      example: Castorche
    ReviewCreationDate:
      type: string
      description: Review creation date
      format: datetime
      example: 2017-08-01T19:15:54.256000+02:00
    ReviewUpdateDate:
      type: string
      description: Review update date
      format: datetime
      example: 2017-08-01T19:15:54.256000+02:00
    CreatedDate:
      type: string
      description: Date of creation
      format: datetime
      example: 2019-08-01T19:15:54.256000+02:00
    ReviewDeleteDate:
      type: string
      description: Review deletion date
      format: datetime
    ReviewRating:
      type: integer
      description: Review rating (can be null)
      maximum: 5
      minimum: 0
      example: 3
    ReviewRecommended:
      type: boolean
      description: Review recommended (can be null)
    ParentId:
      type: integer
      description: id of the parent comment
    ReviewTitle:
      type: string
      description: Review title
    ReviewBody:
      type: string
      description: Review body content
      example: Magasin un peu vieillot , mais personnel très sympathique, nombreuses références en rayons , un très bon choix côté vin...
    CommentBody:
      type: string
      description: Reply content
      example: Merci ❤️
    ReviewState:
      type: string
      description: Reply state
      enum:
        - treated
        - not_treated
        - deleted
    ReviewLink:
      type: string
      format: uri
      description: Link to review on publisher platform
    Comment:
      description: Reply to a review
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CommentId'
        partner_id:
          $ref: '#/components/schemas/ReviewPublisherId'
        created:
          $ref: '#/components/schemas/CreatedDate'
        author_name:
          $ref: '#/components/schemas/ReviewAuthorName'
        content:
          $ref: '#/components/schemas/CommentBody'
        date:
          $ref: '#/components/schemas/ReviewUpdateDate'
        can_edit:
          type: boolean
          example: true
        review_id:
          $ref: '#/components/schemas/ReviewId'
        parent_id:
          $ref: '#/components/schemas/ParentId'
    Review:
      description: Business Review on partner
      type: object
      properties:
        key:
          type: string
        org_id:
          $ref: '#/components/schemas/OrgId'
        id:
          $ref: '#/components/schemas/ReviewId'
        business_id:
          $ref: '#/components/schemas/BusinessId'
        partner:
          $ref: '#/components/schemas/ReviewPublisherLabel'
        partner_id:
          $ref: '#/components/schemas/ReviewPublisherId'
        author_name:
          $ref: '#/components/schemas/ReviewAuthorName'
        date:
          $ref: '#/components/schemas/ReviewUpdateDate'
        update_date:
          $ref: '#/components/schemas/ReviewUpdateDate'
        delete_date:
          $ref: '#/components/schemas/ReviewDeleteDate'
        rating:
          $ref: '#/components/schemas/ReviewRating'
        recommended:
          $ref: '#/components/schemas/ReviewRecommended'
        title:
          $ref: '#/components/schemas/ReviewTitle'
        content:
          $ref: '#/components/schemas/ReviewBody'
        state:
          $ref: '#/components/schemas/ReviewState'
        link:
          $ref: '#/components/schemas/ReviewLink'
        comments:
          $ref:  '#/components/schemas/Comment'
    OrgId:
      description: Organisation id
      type: integer
      example: 42
    OrgName:
      description: Organisation name
      type: string
      example: Fast Retailer
    OrgAlias:
      description: Organisation alias (should match regex `[a-z0-9_]`)
      type: string
      example: fast_retailer
    OrgProvider:
      description: Organisation provider
      type: string
      example: partoo
    Org:
      description: Organisation
      type: object
      properties:
        org_id:
          $ref:  '#/components/schemas/OrgId'
        name:
          $ref:  '#/components/schemas/OrgName'
        alias:
          $ref:  '#/components/schemas/OrgAlias'
        provider:
          $ref:  '#/components/schemas/OrgProvider'
    BusinessId:
      description: Business id
      type: string
      example: 5409c35a97bbc544d8e26737
    BusinessName:
      description: Business name
      type: string
      minLength: 1
      example: Corner shop
    BusinessCity:
      description: Business city
      type: string
      example: Paris
    BusinessCountry:
      description: Business country - use ISO 3166 alpha2 code
      type: string
      example: FR
    BusinessRegion:
      description: Business region
      type: string
      example: Ile-de-France
    BusinessCode:
      description: Business code
      type: string
      example: CS-75019
    BusinessZipcode:
      description: Business zipcode
      type: string
      example: 75019
    BusinessNationalIdentificationNumber:
      description: Business National Identification number
      type: string
    Latitude:
      description: Latitude
      type: number
      format: double
      example: -3.585993
    Longitude:
      description: Longitude
      type: number
      format: double
      example: 47.870341
    BusinessStatus:
      description: Business status
      type: string
      enum: [open, closed]
      default: open
      example: open
    BusinessWebsite:
      description: Business website URL
      type: string
      format: uri
      example: https://www.corner-shop.co/
    BusinessFacebookPage:
      description: Business Facebook page
      type: string
      format: uri
      example: https://www.facebook.com/the-corner-shop
    BusinessTwitter:
      description: Business twitter page
      type: string
      format: uri
      example: https://www.twitter.com/the-corner-shop
    BusinessVideos:
      description: Business videos URLs
      deprecated: true
      type: array
      items:
        type: string
        format: uri
    BusinessNews:
      deprecated: true
      type: array
      items:
        $ref: '#/components/schemas/News'
    BusinessPromos:
      deprecated: true
      type: array
      items:
        $ref: '#/components/schemas/Promo'
    BusinessLongDescription:
      description: Business long description
      type: string
      example: lorem ipsum dolor sit amet
    BusinessShortDescription:
      description: Business short description
      type: string
      example: lorem ipsum
    BusinessOrgId:
      description: Business organisation id
      type: integer
      example: 42
    BusinessContacts:
      description: Business Contacts
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    Business:
      description: Partoo App Business
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BusinessId'
        created:
          description: Timestamp (in seconds) of the business creation
          type: number
          example: 1409925979.5
        modified:
          description: Timestamp (in seconds) of the business last modification
          type: number
          example: 1561335111.681374
        code:
          $ref: '#/components/schemas/BusinessCode'
        status:
          $ref: '#/components/schemas/BusinessStatus'
        org_id:
          $ref: '#/components/schemas/BusinessOrgId'
        name:
          $ref: '#/components/schemas/BusinessName'
        address_details:
          $ref: '#/components/schemas/AddressDetails'
        address:
          description: Business address
          type: string
        address2:
          description: Business address
          type: string
        city:
          $ref: '#/components/schemas/BusinessCity'
        zipcode:
          $ref: '#/components/schemas/BusinessZipcode'
        region:
          $ref: '#/components/schemas/BusinessRegion'
        country:
          $ref: '#/components/schemas/BusinessCountry'
        open_hours:
          $ref: '#/components/schemas/OpenHours'
        specific_hours:
          $ref: '#/components/schemas/SpecificHours'
        description_short:
          $ref: '#/components/schemas/BusinessShortDescription'
        description_long:
          $ref: '#/components/schemas/BusinessLongDescription'
        website_url:
          $ref: '#/components/schemas/BusinessWebsite'
        facebook_url:
          $ref: '#/components/schemas/BusinessFacebookPage'
        twitter_url:
          $ref: '#/components/schemas/BusinessTwitter'
        google_location_id:
          description: Id of GMB Location to which the business is linked
          type: string
        facebook_page_id:
          description: Id of Facebook Location to which the business is linked
          type: string
        national_identification_number:
          $ref: '#/components/schemas/BusinessNationalIdentificationNumber'
        logo_url:
          description: Business LOGO URL
          type: string
          format: uri
        contacts:
          $ref: '#/components/schemas/BusinessContacts'
        photos:
          $ref: '#/components/schemas/Photos'
        lat:
          $ref: '#/components/schemas/Latitude'
        long:
          $ref: '#/components/schemas/Longitude'
        subscriptions:
          $ref: '#/components/schemas/Subscriptions'
        videos:
          $ref: '#/components/schemas/BusinessVideos'
        siret:
          deprecated: true
          description: Business SIRET (for french businesses)
          type: string
        news:
          $ref: '#/components/schemas/BusinessNews'
        promos:
          $ref: '#/components/schemas/BusinessPromos'
    UserPhone:
      description: User phone number
      type: string
    UserFirstName:
      description: User first name
      type: string
      example: Perceval
    UserLastName:
      description: User last name
      type: string
      example: de Galles
    UserEmail:
      description: User email
      type: string
      format: email
      example: perceval@kaamelott.com
    UserProvider:
      description: User provider label
      type: string
      example: partoo
    UserId:
      description: User id
      type: string
      example: 5309c3a237bbc544d8e26737
    UserOrgId:
      description: User organisation id
      type: integer
      example: 42
    User:
      description: Partoo App User
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        org_id:
          $ref: '#/components/schemas/UserOrgId'
        first_name:
          $ref: '#/components/schemas/UserFirstName'
        last_name:
          $ref: '#/components/schemas/UserLastName'
        email:
          $ref: '#/components/schemas/UserEmail'
        lang:
          $ref: '#/components/schemas/Lang'
        phone:
          $ref: '#/components/schemas/UserPhone'
        sidebar_products:
          description: The products the user has access to
          type: array
          items:
            $ref: '#/components/schemas/Product'
        business_ids:
          description: (useful only if you user has `BUSINESS_MANAGER` role) List of businesses ids the user can access
          type: array
          items:
            $ref: '#/components/schemas/BusinessId'
        reports:
          description: List of reports that the user has access to (not all User endpoints return this field)
          type: array
          items:
            $ref: '#/components/schemas/Report'
        role:
          $ref: '#/components/schemas/Role'
        provider:
          $ref: '#/components/schemas/UserProvider'
        status:
          $ref: '#/components/schemas/UserStatus'
        keywords:
          $ref: '#/components/schemas/Keywords'
    OpenHours:
      description: Business open hours in a week
      type: object
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      properties:
        monday:
          $ref: '#/components/schemas/Day'
        tuesday:
          $ref: '#/components/schemas/Day'
        wednesday:
          $ref: '#/components/schemas/Day'
        thursday:
          $ref: '#/components/schemas/Day'
        friday:
          $ref: '#/components/schemas/Day'
        saturday:
          $ref: '#/components/schemas/Day'
        sunday:
          $ref: '#/components/schemas/Day'
    SpecificHours:
      description: Business exceptional openned/closed periods
      type: object
      required:
        - open
        - close
      properties:
        open:
          type: array
          items:
            type: object
            properties:
              starts_at:
                type: string
                pattern: date
              ends_at:
                type: string
                pattern: date
              open_hours:
                type: array
                items:
                  $ref: '#/components/schemas/TimeWindow'
        close:
          type: array
          items:
            type: object
            properties:
              starts_at:
                type: string
                pattern: date
              ends_at:
                type: string
                pattern: date
    Contact:
      description: Business contact
      type: object
      properties:
        name:
          description: Contact full name
          type: string
          example: Hubert Bonisseur de la Bath
        email:
          description: Contact email
          type: string
          format: email
          example: hubert@oss117.fr
        phone_numbers:
          description: Contact phone numbers
          type: array
          items:
            type: string
          example: ['0302060628']
    AddressDetails:
      description: Business address object
      type: object
      required:
        - street_name
      properties:
        number:
          description: Street number
          type: string
          example: 12
        number_supplement:
          description: Street number supplement
          type: string
          example: bis
        street_type:
          description: Type of street
          type: string
          example: rue
        street_name:
          description: Name of the street
          type: string
          example: du coquelicot
    Keywords:
      description: Array of keywords
      type: array
      maxItems: 12
      items:
        type: string
    Photos:
      description: Business photos
      type: object
      properties:
        primary:
          description: Business main photo URL
          type: string
          format: uri
        secondary:
          description: Business secondary photos urls
          type: array
          items:
            type: string
            format: uri
        LOGO:
          description: Business logo URL
          type: string
          format: uri
    IntegrationStatus:
      description: Business integration status on publisher
      type: string
      enum:
        - SUCCESS
        - PENDING
        - NOT_AUTHORIZED
        - NOT_AUTHENTICATED
        - FIELD_ERROR
        - FIELD_REJECTED
        - ERROR
        - DUPLICATED_BUSINESSES
        - ORG_DISABLED
    IntegrationData:
      description: Business integration data for given partner
      type: object
      properties:
        status:
          $ref: '#/components/schemas/IntegrationStatus'
        url:
          description: Business URL on publisher platform
          type: string
          format: uri
        timestamp:
          description: Status date
          type: string
          format: datetime
        error_details:
          description: Errors messages list if status is not `SUCCESS` or `PENDING`
          type: array
          items:
            type: string
    InvitationId:
      description: invitation id
      type: string
      example: d3d8c966-0356-4ec0-baae-13ec3622ebc2
    TargetPhone:
      type: string
      description: the exact phone number we would have sent the invitation(s) to
      example: '0701020304'
    # DEPRECATED fields
    Promo:
      deprecated: true
      description: Business promotions
      type: object
      required:
        - title
        - description
        - begin
        - end
      properties:
        title:
          type: string
          description: Promo title
        description:
          type: string
          description: Promo description
        term_of_use:
          type: string
          description: Promo term of use
        additional_informations:
          type: string
          description: Promo additional informations
        begin:
          type: integer
          description: Promo start timestamp
        end:
          type: integer
          description: Promo end timestamp
        images:
          type: array
          description: Promo images to be displayed
          items:
            type: string
            format: uri
        client_offer_url:
          description: Promo URL
          type: string
          format: uri
        promo_url:
          description: URL of the website
          type: string
          format: uri
    News:
      deprecated: true
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          description: News title
        description:
          type: string
          description: News description
    RequestStatus:
      description: Request status
      type: string
      enum:
        - success
    SubscriptionDetails:
      type: object
      description: The details on the presence_management subscription
      properties:
        status:
          type: string
          enum: ["inactive", "active"]
        canceling_date:
          type: integer
          description: timestamp
    Report:
      description: Report name
      type: string
      example: "review_management_weekly"
  parameters:
    business_id:
      in: path
      name: business_id
      required: true
      schema:
        type: string
      description: Business id
    path_org_id:
      in: path
      name: org_id
      required: true
      schema:
        type: integer
      description: Organisation id
    path_user_id:
      in: path
      required: true
      name: user_id
      schema:
        type: string
      description: User id
    query_page:
      in: query
      name: page
      schema:
        type: integer
        default: 0
      description: Page number. 30 results per page
    query_org_id:
      in: query
      name: org_id
      schema:
        type: integer
      description: Organisation id
    query_category_lang:
      in: query
      name: lang
      required: true
      schema:
        type: string
        enum: ['fr', 'es', 'it', 'en', 'de']
      description: Language in which the categories are going to be displayed
    query_filter_by_org_id:
      in: query
      name: org_id
      schema:
        type: integer
      required: false
      description: Filter by organisation id
    query_filter_by_email:
      in: query
      name: email
      schema:
        type: string
        format: email
      description: Filter by email
    query_filter_by_user_status:
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/UserStatus'
      description: Filter by status
    query_filter_by_fuzzy_query_on_business:
      in: query
      name: query
      schema:
        type: string
      required: false
      description: Parameter to fuzzy search businesses on city, zipcode and name
    query_filter_by_business_status:
      in: query
      name: status
      schema:
        $ref: '#/components/schemas/BusinessStatus'
    query_filter_by_zipcode:
      in: query
      name: zipcode
      schema:
        type: string
      required: false
      description: Filter by zipcode
    query_filter_by_city:
      in: query
      name: city
      schema:
        type: string
      required: false
      description: Filter by city
    query_filter_by_business_code:
      in: query
      name: code
      schema:
        type: string
      required: false
      description: Filter by code
    query_filter_by_business_name:
      in: query
      name: name
      schema:
        type: string
      required: false
      description: Filter by name
    query_filter_by_country:
      in: query
      name: country
      schema:
        type: string
      required: false
      description: Filter by country - use ISO 3166 alpha2 code (i.e. use “FR” for France)
    query_filter_by_business_promo:
      in: query
      name: has_promo
      deprecated: true
      schema:
        type: string
        enum: ["True", "False"]
      required: false
      description: Retrieve only businesses having promotional offers
    query_filter_by_business_modification_timestamp:
      in: query
      name: timestamp
      deprecated: true
      schema:
        type: integer
      required: false
      description: Filter by modified attribute (modified >= timestamp)
    query_filter_by_business_subscription_to_review_management:
      in: query
      deprecated: true
      name: subscribed_to_rm
      schema:
        type: string
        enum:
          - "True"
          - "False"
      required: false
      description: Filter by current subscription to `review_management`
    query_filter_by_business_subscription_to_presence_management:
      in: query
      deprecated: true
      name: subscribed_to_pm
      schema:
        type: string
        enum:
          - "True"
          - "False"
      required: false
      description: Filter by current subscription to `presence_management
    query_business__in:
      in: query
      name: business__in
      description: Filter by business ids
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessId'
    query_business__notin:
      in: query
      name: business__notin
      description: Filter out by business ids
      schema:
        type: array
        items:
          $ref: '#/components/schemas/BusinessId'
    query_content__isnull:
      in: query
      name: content__isnull
      description: >
        Filter by content.
        If set to `true`, the endpoint will only return wih no content.
      schema:
        type: string
        enum:
          - true
          - false
    query_review_bucket:
      in: query
      name: bucket
      schema:
        type: string
        enum: ['day', 'week', 'month', 'year']
      description: Defining the time range of a data bucket
    query_review_cumulative:
      in: query
      name: cumulative
      schema:
        type: string
        enum: ['true', 'false']
      description: mark if the queried data accumulated from the former data
    query_analytics_date__gte:
      in: query
      name: filter_date__gte
      description: >
        Filter by `date`.
        Return all the analytics whose `date` >= `given_date`.
      schema:
        type: string
        format: datetime
    query_analytics_date__lte:
      in: query
      name: filter_date__lte
      description: >
        Filter by `date`.
        Return all the analytics whose `filter_date` <= `given_date`.
      schema:
        type: string
        format: datetime
    query_review_update_date__gte:
      in: query
      name: update_date__gte
      description: >
        Filter by `update_date`.
        Return all the reviews whose `update_date` >= `given_date`.
      schema:
        type: string
        format: datetime
    query_review_update_date__lte:
      in: query
      name: update_date__lte
      description: >
        Filter by `update_date`.
        Return all the reviews whose `update_date` <= `given_date`.
      schema:
        type: string
        format: datetime
    query_review_rating__in:
      in: query
      name: rating__in
      description: >
        Filter by `rating`.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ReviewRating'
    query_partner__in:
      in: query
      name: partner__in
      description: Filter by `partner`
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ReviewPublisherLabel'
    query_review_state:
      in: query
      name: state
      description: Filter by state
      schema:
        $ref: '#/components/schemas/ReviewState'
    metrics:
      in: query
      name: metrics
      required: true
      schema:
        type: string
        enum: [queries_direct, queries_indirect, queries_branded, queries_discovery, views_maps, views_search,
               actions_website, actions_phone, actions_driving_directions]
        example: queries_direct
      description: List of analytics to return. At least one in that list.
    dimensions:
      in: query
      name: dimensions
      schema:
        type: string
        enum: [business, day, week, month, year]
      description: |
        How the returned data will be aggregated. At most 'business' and one time dimensions of the list.
        If no dimension is given, the request will return the sum of each metric for all requested days and businesses.
    order:
      in: query
      name: order
      schema:
        type: string
        enum: [<object>__asc, <object>__desc]
        example: queries_direct__desc
      description: Where *object* is either a dimension or a metric and is used in the request. At most one in the list.
    export_email:
      in: query
      name: email
      required: true
      schema:
        type: string
        format: email
        example: perceval@kaamelott.com
        description: email address the export will be sent to
  responses:
    400:
      description: Your request is incorrect
      content:
        application/json:
          schema:
            description: >
              Error that occcurs when your request is incorrect
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  json:
                    type: object
    401:
      description: You are not authenticated
      content:
        application/json:
          schema:
            description: Error that occurs when you are not authenticated
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  authentication:
                    type: string
                    default: "User not authenticated"
    403:
      description: >
        You are not allowed to perform this action
      content:
        application/json:
          schema:
            description: >
              Error that occurs when you are authenticated but you are trying to perform an action you are not
              allowed to perform
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  authorization:
                    type: string
                    default: "Operation not allowed"
    404:
      description: Resource does not exist
      content:
        application/json:
          schema:
            description: Error that occcurs when you are trying to reach a resource that does not exist
            type: object
            properties:
              errors:
                type: object
                description: The detail of the error encountered
                properties:
                  json:
                    type: string
                    default: "Resource not found"

security:
  - ApiKeyAuth: []
